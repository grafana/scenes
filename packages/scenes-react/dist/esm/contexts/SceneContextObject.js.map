{"version":3,"file":"SceneContextObject.js","sources":["../../../src/contexts/SceneContextObject.tsx"],"sourcesContent":["import {\n  SceneObjectBase,\n  SceneObject,\n  SceneObjectState,\n  SceneVariable,\n  SceneVariableSet,\n  NewSceneObjectAddedEvent,\n} from '@grafana/scenes';\nimport { writeSceneLog } from '../utils';\n\nexport interface SceneContextObjectState extends SceneObjectState {\n  childContexts?: SceneContextObject[];\n  children: SceneObject[];\n}\n\nexport class SceneContextObject extends SceneObjectBase<SceneContextObjectState> {\n  public constructor(state?: Partial<SceneContextObjectState>) {\n    super({\n      ...state,\n      children: state?.children ?? [],\n      childContexts: state?.childContexts ?? [],\n    });\n  }\n\n  public addToScene(obj: SceneObject) {\n    this.publishEvent(new NewSceneObjectAddedEvent(obj), true);\n\n    this.setState({ children: [...this.state.children, obj] });\n    writeSceneLog('SceneContext', `Adding to scene: ${obj.constructor.name} key: ${obj.state.key}`);\n\n    const deactivate = obj.activate();\n\n    return () => {\n      writeSceneLog('SceneContext', `Removing from scene: ${obj.constructor.name} key: ${obj.state.key}`);\n      this.setState({ children: this.state.children.filter((x) => x !== obj) });\n\n      deactivate();\n    };\n  }\n\n  public findByKey<T>(key: string): T | undefined {\n    return this.state.children.find((x) => x.state.key === key) as T;\n  }\n\n  public findVariable<T>(name: string): T | undefined {\n    const variables = this.state.$variables as SceneVariableSet;\n    if (!variables) {\n      return;\n    }\n\n    return variables.getByName(name) as T;\n  }\n\n  public addVariable(variable: SceneVariable) {\n    let set = this.state.$variables as SceneVariableSet;\n\n    this.publishEvent(new NewSceneObjectAddedEvent(variable), true);\n\n    if (set) {\n      set.setState({ variables: [...set.state.variables, variable] });\n    } else {\n      set = new SceneVariableSet({ variables: [variable] });\n      this.setState({ $variables: set });\n    }\n\n    writeSceneLog('SceneContext', `Adding variable: ${variable.constructor.name} key: ${variable.state.key}`);\n\n    return () => {\n      set.setState({ variables: set.state.variables.filter((x) => x !== variable) });\n      writeSceneLog('SceneContext', `Removing variable: ${variable.constructor.name} key: ${variable.state.key}`);\n    };\n  }\n\n  public addChildContext(ctx: SceneContextObject) {\n    this.publishEvent(new NewSceneObjectAddedEvent(ctx), true);\n\n    this.setState({ childContexts: [...(this.state.childContexts ?? []), ctx] });\n\n    writeSceneLog('SceneContext', `Adding child context: ${ctx.constructor.name} key: ${ctx.state.key}`);\n  }\n\n  public removeChildContext(ctx: SceneContextObject) {\n    this.setState({\n      childContexts: this.state.childContexts?.filter((context) => ctx !== context),\n    });\n\n    writeSceneLog('SceneContext', `Remvoing child context: ${ctx.constructor.name} key: ${ctx.state.key}`);\n  }\n}\n"],"names":[],"mappings":"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"}