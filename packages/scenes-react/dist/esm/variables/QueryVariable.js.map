{"version":3,"file":"QueryVariable.js","sources":["../../../src/variables/QueryVariable.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { QueryVariable as QueryVariableObject, SceneDataQuery } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks';\nimport { DataSourceRef, VariableRefresh, VariableSort } from '@grafana/schema';\nimport { VariableProps } from './types';\nimport { isEqual } from 'lodash';\n\nexport interface QueryVariableProps extends VariableProps {\n  query: string | SceneDataQuery;\n  datasource: DataSourceRef | null;\n  regex?: string;\n  refresh?: VariableRefresh;\n  sort?: VariableSort;\n  isMulti?: boolean;\n  includeAll?: boolean;\n  children: React.ReactNode;\n}\n\nexport function QueryVariable({\n  query,\n  name,\n  datasource,\n  label,\n  hide,\n  regex,\n  refresh,\n  sort,\n  initialValue,\n  isMulti,\n  includeAll,\n  children,\n}: QueryVariableProps): React.ReactNode {\n  const scene = useSceneContext();\n  const [variableAdded, setVariableAdded] = useState<boolean>();\n\n  let variable: QueryVariableObject | undefined = scene.findVariable(name);\n\n  if (!variable) {\n    variable = new QueryVariableObject({ \n      name,\n      label,\n      query,\n      datasource, \n      refresh, \n      sort, \n      regex, \n      value: initialValue, \n      isMulti,\n      hide, \n      includeAll,\n     });\n  }\n\n  useEffect(() => {\n    const removeFn = scene.addVariable(variable);\n    setVariableAdded(true);\n    return removeFn;\n  }, [variable, scene, name]);\n\n  useEffect(() => {\n    if (!variableAdded) {\n      return;\n    }\n\n    if (\n      isEqual(variable.state.query, query) &&\n      isEqual(variable.state.datasource, datasource) &&\n      variable.state.regex === regex &&\n      variable.state.label === label &&\n      variable.state.hide === hide &&\n      variable.state.includeAll === includeAll &&\n      variable.state.refresh === refresh &&\n      variable.state.sort === sort\n    ) {\n      return;\n    }\n\n    variable.setState({\n      label,\n      query,\n      datasource, \n      refresh, \n      sort, \n      regex, \n      hide, \n      includeAll,\n    });\n\n    variable.refreshOptions();\n  }, [datasource, hide, includeAll, label, query, refresh, regex, sort, variable, variableAdded]);\n \n\n  // Need to block child rendering until the variable is added so that child components like RVariableSelect find the variable\n  if (!variableAdded) {\n    return null;\n  }\n\n  return children;\n}\n"],"names":["QueryVariableObject"],"mappings":";;;;;AAkBO,SAAS,aAAc,CAAA;AAAA,EAC5B,KAAA;AAAA,EACA,IAAA;AAAA,EACA,UAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,EACA,KAAA;AAAA,EACA,OAAA;AAAA,EACA,IAAA;AAAA,EACA,YAAA;AAAA,EACA,OAAA;AAAA,EACA,UAAA;AAAA,EACA,QAAA;AACF,CAAwC,EAAA;AACtC,EAAA,MAAM,QAAQ,eAAgB,EAAA,CAAA;AAC9B,EAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAI,QAAkB,EAAA,CAAA;AAE5D,EAAI,IAAA,QAAA,GAA4C,KAAM,CAAA,YAAA,CAAa,IAAI,CAAA,CAAA;AAEvE,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAA,QAAA,GAAW,IAAIA,eAAoB,CAAA;AAAA,MACjC,IAAA;AAAA,MACA,KAAA;AAAA,MACA,KAAA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,IAAA;AAAA,MACA,KAAA;AAAA,MACA,KAAO,EAAA,YAAA;AAAA,MACP,OAAA;AAAA,MACA,IAAA;AAAA,MACA,UAAA;AAAA,KACA,CAAA,CAAA;AAAA,GACJ;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAM,MAAA,QAAA,GAAW,KAAM,CAAA,WAAA,CAAY,QAAQ,CAAA,CAAA;AAC3C,IAAA,gBAAA,CAAiB,IAAI,CAAA,CAAA;AACrB,IAAO,OAAA,QAAA,CAAA;AAAA,GACN,EAAA,CAAC,QAAU,EAAA,KAAA,EAAO,IAAI,CAAC,CAAA,CAAA;AAE1B,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,aAAe,EAAA;AAClB,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,IACE,OAAQ,CAAA,QAAA,CAAS,KAAM,CAAA,KAAA,EAAO,KAAK,CACnC,IAAA,OAAA,CAAQ,QAAS,CAAA,KAAA,CAAM,YAAY,UAAU,CAAA,IAC7C,QAAS,CAAA,KAAA,CAAM,UAAU,KACzB,IAAA,QAAA,CAAS,KAAM,CAAA,KAAA,KAAU,SACzB,QAAS,CAAA,KAAA,CAAM,IAAS,KAAA,IAAA,IACxB,SAAS,KAAM,CAAA,UAAA,KAAe,UAC9B,IAAA,QAAA,CAAS,MAAM,OAAY,KAAA,OAAA,IAC3B,QAAS,CAAA,KAAA,CAAM,SAAS,IACxB,EAAA;AACA,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,QAAA,CAAS,QAAS,CAAA;AAAA,MAChB,KAAA;AAAA,MACA,KAAA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,IAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAA;AAAA,MACA,UAAA;AAAA,KACD,CAAA,CAAA;AAED,IAAA,QAAA,CAAS,cAAe,EAAA,CAAA;AAAA,GACvB,EAAA,CAAC,UAAY,EAAA,IAAA,EAAM,UAAY,EAAA,KAAA,EAAO,KAAO,EAAA,OAAA,EAAS,KAAO,EAAA,IAAA,EAAM,QAAU,EAAA,aAAa,CAAC,CAAA,CAAA;AAI9F,EAAA,IAAI,CAAC,aAAe,EAAA;AAClB,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAO,OAAA,QAAA,CAAA;AACT;;;;"}