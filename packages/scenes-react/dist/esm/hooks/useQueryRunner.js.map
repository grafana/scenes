{"version":3,"file":"useQueryRunner.js","sources":["../../../src/hooks/useQueryRunner.ts"],"sourcesContent":["import { useEffect, useId } from 'react';\nimport { SceneDataQuery, SceneQueryRunner } from '@grafana/scenes';\nimport { DataSourceRef } from '@grafana/schema';\nimport { isEqual } from 'lodash';\nimport { useSceneContext } from './hooks';\n\nexport interface UseQueryOptions {\n  queries: SceneDataQuery[];\n  maxDataPoints?: number;\n  datasource?: DataSourceRef;\n  liveStreaming?: boolean;\n  maxDataPointsFromWidth?: boolean;\n}\n\n/**\n * Maintains the state of SceneQueryRunner in the scene\n *\n * @example // To access query results do\n * const query = useQueryRunner(...);\n * const { data } = query.useState();\n */\nexport function useQueryRunner(options: UseQueryOptions): SceneQueryRunner {\n  const scene = useSceneContext();\n  const key = useId();\n\n  let queryRunner = scene.findByKey<SceneQueryRunner>(key);\n\n  if (!queryRunner) {\n    queryRunner = new SceneQueryRunner({\n      key: key,\n      queries: options.queries,\n      maxDataPoints: options.maxDataPoints,\n      datasource: options.datasource,\n      liveStreaming: options.liveStreaming,\n      maxDataPointsFromWidth: options.maxDataPointsFromWidth,\n    });\n  }\n\n  useEffect(() => scene.addToScene(queryRunner), [queryRunner, scene]);\n\n  // Update queries when they change\n  useEffect(() => {\n    if (!isEqual(queryRunner.state.queries, options.queries)) {\n      queryRunner.setState({ queries: options.queries });\n      queryRunner.runQueries();\n    }\n  }, [queryRunner, options]);\n\n  return queryRunner;\n}\n"],"names":[],"mappings":";;;;;AAqBO,SAAS,eAAe,OAA4C,EAAA;AACzE,EAAA,MAAM,QAAQ,eAAgB,EAAA,CAAA;AAC9B,EAAA,MAAM,MAAM,KAAM,EAAA,CAAA;AAElB,EAAI,IAAA,WAAA,GAAc,KAAM,CAAA,SAAA,CAA4B,GAAG,CAAA,CAAA;AAEvD,EAAA,IAAI,CAAC,WAAa,EAAA;AAChB,IAAA,WAAA,GAAc,IAAI,gBAAiB,CAAA;AAAA,MACjC,GAAA;AAAA,MACA,SAAS,OAAQ,CAAA,OAAA;AAAA,MACjB,eAAe,OAAQ,CAAA,aAAA;AAAA,MACvB,YAAY,OAAQ,CAAA,UAAA;AAAA,MACpB,eAAe,OAAQ,CAAA,aAAA;AAAA,MACvB,wBAAwB,OAAQ,CAAA,sBAAA;AAAA,KACjC,CAAA,CAAA;AAAA,GACH;AAEA,EAAU,SAAA,CAAA,MAAM,MAAM,UAAW,CAAA,WAAW,GAAG,CAAC,WAAA,EAAa,KAAK,CAAC,CAAA,CAAA;AAGnE,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAQ,CAAA,WAAA,CAAY,MAAM,OAAS,EAAA,OAAA,CAAQ,OAAO,CAAG,EAAA;AACxD,MAAA,WAAA,CAAY,QAAS,CAAA,EAAE,OAAS,EAAA,OAAA,CAAQ,SAAS,CAAA,CAAA;AACjD,MAAA,WAAA,CAAY,UAAW,EAAA,CAAA;AAAA,KACzB;AAAA,GACC,EAAA,CAAC,WAAa,EAAA,OAAO,CAAC,CAAA,CAAA;AAEzB,EAAO,OAAA,WAAA,CAAA;AACT;;;;"}