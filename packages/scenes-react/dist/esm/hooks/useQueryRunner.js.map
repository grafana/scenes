{"version":3,"file":"useQueryRunner.js","sources":["../../../src/hooks/useQueryRunner.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { SceneDataQuery, SceneQueryRunner } from '@grafana/scenes';\nimport { DataSourceRef } from '@grafana/schema';\nimport { isEqual } from 'lodash';\nimport { CacheKey } from '../caching/SceneObjectCache';\nimport { useSceneObject } from './useSceneObject';\n\nexport interface UseQueryOptions {\n  queries: SceneDataQuery[];\n  maxDataPoints?: number;\n  datasource?: DataSourceRef;\n  cacheKey?: CacheKey;\n  liveStreaming?: boolean;\n  maxDataPointsFromWidth?: boolean;\n}\n\n/**\n * Maintains the state of SceneQueryRunner in the scene\n *\n * @example // To access query results do\n * const query = useQueryRunner(...);\n * const { data } = query.useState();\n */\nexport function useQueryRunner(options: UseQueryOptions): SceneQueryRunner {\n  const queryRunner = useSceneObject({\n    factory: (key) =>\n      new SceneQueryRunner({\n        key: key,\n        queries: options.queries,\n        maxDataPoints: options.maxDataPoints,\n        datasource: options.datasource,\n        liveStreaming: options.liveStreaming,\n        maxDataPointsFromWidth: options.maxDataPointsFromWidth,\n      }),\n    objectConstructor: SceneQueryRunner,\n    cacheKey: options.cacheKey,\n  });\n\n  // Update queries when they change\n  useEffect(() => {\n    if (!isEqual(queryRunner.state.queries, options.queries)) {\n      queryRunner.setState({ queries: options.queries });\n      queryRunner.runQueries();\n    }\n  }, [queryRunner, options]);\n\n  return queryRunner;\n}\n"],"names":[],"mappings":";;;;;AAuBO,SAAS,eAAe,OAA4C,EAAA;AACzE,EAAA,MAAM,cAAc,cAAe,CAAA;AAAA,IACjC,OAAS,EAAA,CAAC,GACR,KAAA,IAAI,gBAAiB,CAAA;AAAA,MACnB,GAAA;AAAA,MACA,SAAS,OAAQ,CAAA,OAAA;AAAA,MACjB,eAAe,OAAQ,CAAA,aAAA;AAAA,MACvB,YAAY,OAAQ,CAAA,UAAA;AAAA,MACpB,eAAe,OAAQ,CAAA,aAAA;AAAA,MACvB,wBAAwB,OAAQ,CAAA,sBAAA;AAAA,KACjC,CAAA;AAAA,IACH,iBAAmB,EAAA,gBAAA;AAAA,IACnB,UAAU,OAAQ,CAAA,QAAA;AAAA,GACnB,CAAA,CAAA;AAGD,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAQ,CAAA,WAAA,CAAY,MAAM,OAAS,EAAA,OAAA,CAAQ,OAAO,CAAG,EAAA;AACxD,MAAA,WAAA,CAAY,QAAS,CAAA,EAAE,OAAS,EAAA,OAAA,CAAQ,SAAS,CAAA,CAAA;AACjD,MAAA,WAAA,CAAY,UAAW,EAAA,CAAA;AAAA,KACzB;AAAA,GACC,EAAA,CAAC,WAAa,EAAA,OAAO,CAAC,CAAA,CAAA;AAEzB,EAAO,OAAA,WAAA,CAAA;AACT;;;;"}