{"version":3,"file":"RuntimeDataSource.js","sources":["../../../src/querying/RuntimeDataSource.ts"],"sourcesContent":["import { DataQuery, DataSourceApi, PluginType } from '@grafana/data';\n\nexport abstract class RuntimeDataSource<TQuery extends DataQuery = DataQuery> extends DataSourceApi<TQuery> {\n  public constructor(pluginId: string, uid: string) {\n    super({\n      name: 'RuntimeDataSource-' + pluginId,\n      uid: uid,\n      type: pluginId,\n      id: 1,\n      readOnly: true,\n      jsonData: {},\n      access: 'direct',\n      meta: {\n        id: pluginId,\n        name: 'RuntimeDataSource-' + pluginId,\n        type: PluginType.datasource,\n        info: {\n          author: {\n            name: '',\n          },\n          description: '',\n          links: [],\n          logos: {\n            large: '',\n            small: '',\n          },\n          screenshots: [],\n          updated: '',\n          version: '',\n        },\n        module: '',\n        baseUrl: '',\n      },\n    });\n  }\n\n  public testDatasource(): Promise<any> {\n    return Promise.resolve({});\n  }\n}\n\nexport const runtimeDataSources = new Map<string, RuntimeDataSource>();\n\nexport interface RuntimeDataSourceOptions {\n  dataSource: RuntimeDataSource;\n}\n\n/**\n * Provides a way to register runtime panel plugins.\n * Please use a pluginId that is unlikely to collide with other plugins.\n */\nexport function registerRuntimeDataSource({ dataSource }: RuntimeDataSourceOptions) {\n  if (runtimeDataSources.has(dataSource.uid)) {\n    throw new Error(`A runtime data source with uid ${dataSource.uid} has already been registered`);\n  }\n\n  runtimeDataSources.set(dataSource.uid, dataSource);\n}\n"],"names":[],"mappings":";;AAEO,MAAe,0BAAgE,aAAsB,CAAA;AAAA,EACnG,WAAA,CAAY,UAAkB,GAAa,EAAA;AAChD,IAAM,KAAA,CAAA;AAAA,MACJ,MAAM,oBAAuB,GAAA,QAAA;AAAA,MAC7B,GAAA;AAAA,MACA,IAAM,EAAA,QAAA;AAAA,MACN,EAAI,EAAA,CAAA;AAAA,MACJ,QAAU,EAAA,IAAA;AAAA,MACV,UAAU,EAAC;AAAA,MACX,MAAQ,EAAA,QAAA;AAAA,MACR,IAAM,EAAA;AAAA,QACJ,EAAI,EAAA,QAAA;AAAA,QACJ,MAAM,oBAAuB,GAAA,QAAA;AAAA,QAC7B,MAAM,UAAW,CAAA,UAAA;AAAA,QACjB,IAAM,EAAA;AAAA,UACJ,MAAQ,EAAA;AAAA,YACN,IAAM,EAAA,EAAA;AAAA,WACR;AAAA,UACA,WAAa,EAAA,EAAA;AAAA,UACb,OAAO,EAAC;AAAA,UACR,KAAO,EAAA;AAAA,YACL,KAAO,EAAA,EAAA;AAAA,YACP,KAAO,EAAA,EAAA;AAAA,WACT;AAAA,UACA,aAAa,EAAC;AAAA,UACd,OAAS,EAAA,EAAA;AAAA,UACT,OAAS,EAAA,EAAA;AAAA,SACX;AAAA,QACA,MAAQ,EAAA,EAAA;AAAA,QACR,OAAS,EAAA,EAAA;AAAA,OACX;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AAAA,EAEO,cAA+B,GAAA;AACpC,IAAO,OAAA,OAAA,CAAQ,OAAQ,CAAA,EAAE,CAAA,CAAA;AAAA,GAC3B;AACF,CAAA;AAEa,MAAA,kBAAA,uBAAyB,GAA+B,GAAA;AAUrD,SAAA,yBAAA,CAA0B,EAAE,UAAA,EAAwC,EAAA;AAClF,EAAA,IAAI,kBAAmB,CAAA,GAAA,CAAI,UAAW,CAAA,GAAG,CAAG,EAAA;AAC1C,IAAA,MAAM,IAAI,KAAA,CAAM,CAAkC,+BAAA,EAAA,UAAA,CAAW,GAAiC,CAAA,4BAAA,CAAA,CAAA,CAAA;AAAA,GAChG;AAEA,EAAmB,kBAAA,CAAA,GAAA,CAAI,UAAW,CAAA,GAAA,EAAK,UAAU,CAAA,CAAA;AACnD;;;;"}