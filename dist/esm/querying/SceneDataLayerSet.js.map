{"version":3,"file":"SceneDataLayerSet.js","sources":["../../../src/querying/SceneDataLayerSet.tsx"],"sourcesContent":["import React from 'react';\nimport { DataFrame } from '@grafana/data';\nimport { Observable, ReplaySubject, Unsubscribable } from 'rxjs';\nimport { emptyPanelData } from '../core/SceneDataNode';\nimport { SceneObjectBase } from '../core/SceneObjectBase';\nimport {\n  SceneComponentProps,\n  SceneDataLayerProvider,\n  SceneDataLayerProviderState,\n  SceneDataProviderResult,\n} from '../core/types';\nimport { DataLayersMerger } from './DataLayersMerger';\nimport { setBaseClassState } from '../utils/utils';\n\nexport abstract class SceneDataLayerSetBase<T extends SceneDataLayerProviderState>\n  extends SceneObjectBase<T>\n  implements SceneDataLayerProvider\n{\n  /** Mark it as a data layer */\n  public isDataLayer: true = true;\n\n  /**\n   * Subscription to query results. Should be set when layer runs a query.\n   */\n  protected querySub?: Unsubscribable;\n\n  /**\n   * Subject to emit results to.\n   */\n  private _results = new ReplaySubject<SceneDataProviderResult>(1);\n  private _dataLayersMerger = new DataLayersMerger();\n\n  protected subscribeToAllLayers(layers: SceneDataLayerProvider[]) {\n    if (layers.length > 0) {\n      this.querySub = this._dataLayersMerger.getMergedStream(layers).subscribe(this._onLayerUpdateReceived.bind(this));\n    } else {\n      this._results.next({ origin: this, data: emptyPanelData });\n      this.setStateHelper({ data: emptyPanelData });\n    }\n  }\n\n  private _onLayerUpdateReceived(results: Iterable<SceneDataProviderResult>) {\n    let series: DataFrame[] = [];\n\n    for (const result of results) {\n      if (result.data?.series) {\n        series = series.concat(result.data.series);\n      }\n    }\n\n    const combinedData = { ...emptyPanelData, series: series };\n\n    this._results.next({ origin: this, data: combinedData });\n    this.setStateHelper({ data: combinedData });\n  }\n\n  public getResultsStream(): Observable<SceneDataProviderResult> {\n    return this._results;\n  }\n\n  public cancelQuery() {\n    this.querySub?.unsubscribe();\n  }\n\n  /**\n   * This helper function is to counter the contravariance of setState\n   */\n  private setStateHelper(state: Partial<SceneDataLayerProviderState>) {\n    setBaseClassState<SceneDataLayerProviderState>(this, state);\n  }\n}\n\nexport interface SceneDataLayersSetState extends SceneDataLayerProviderState {\n  layers: SceneDataLayerProvider[];\n}\n\nexport class SceneDataLayerSet\n  extends SceneDataLayerSetBase<SceneDataLayersSetState>\n  implements SceneDataLayerProvider\n{\n  public constructor(state: Partial<SceneDataLayersSetState>) {\n    super({\n      name: state.name ?? 'Data layers',\n      layers: state.layers ?? [],\n    });\n\n    this.addActivationHandler(() => this._onActivate());\n  }\n\n  private _onActivate() {\n    this._subs.add(\n      this.subscribeToState((newState, oldState) => {\n        if (newState.layers !== oldState.layers) {\n          this.querySub?.unsubscribe();\n          this.subscribeToAllLayers(newState.layers);\n        }\n      })\n    );\n\n    this.subscribeToAllLayers(this.state.layers);\n\n    return () => {\n      this.querySub?.unsubscribe();\n    };\n  }\n\n  public static Component = ({ model }: SceneComponentProps<SceneDataLayerSet>) => {\n    const { layers } = model.useState();\n\n    return (\n      <>\n        {layers.map((layer) => (\n          <layer.Component model={layer} key={layer.state.key} />\n        ))}\n      </>\n    );\n  };\n}\n"],"names":[],"mappings":"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"}