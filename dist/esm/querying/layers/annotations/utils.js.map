{"version":3,"file":"utils.js","sources":["../../../../../src/querying/layers/annotations/utils.ts"],"sourcesContent":["// These opt outs are here only for quicker and easier migration to react based annotations editors and because\n// annotation support API needs some work to support less \"standard\" editors like prometheus and here it is not\n// polluting public API.\n\nimport { AnnotationEvent, AnnotationQuery, DataSourceApi } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { cloneDeep, concat, every, find, groupBy, head, map, partition } from 'lodash';\n\nconst legacyRunner = [\n  'prometheus',\n  'loki',\n  'elasticsearch',\n  'grafana-opensearch-datasource', // external\n];\n\n/**\n * Use legacy runner. Used only as an escape hatch for easier transition to React based annotation editor.\n */\nexport function shouldUseLegacyRunner(datasource: DataSourceApi): boolean {\n  const { type } = datasource;\n  return !datasource.annotations || legacyRunner.includes(type);\n}\n\nexport function postProcessQueryResult(annotation: AnnotationQuery, results: AnnotationEvent[]): AnnotationEvent[] {\n  // if annotation has snapshotData\n  // make clone and remove it\n  if (annotation.snapshotData) {\n    annotation = cloneDeep(annotation);\n    delete annotation.snapshotData;\n  }\n\n  //\n  const processed = results.map((item) => {\n    const processedItem = { ...item };\n\n    processedItem.source = annotation;\n    processedItem.color = config.theme2.visualization.getColorByName(annotation.iconColor);\n    processedItem.type = annotation.name;\n    processedItem.isRegion = Boolean(processedItem.timeEnd && processedItem.time !== processedItem.timeEnd);\n\n    switch (processedItem.newState?.toLowerCase()) {\n      case 'pending':\n        processedItem.color = 'yellow';\n        break;\n      case 'alerting':\n        processedItem.color = 'red';\n        break;\n      case 'ok':\n        processedItem.color = 'green';\n        break;\n      case 'normal': // ngalert (\"normal\" instead of \"ok\")\n        processedItem.color = 'green';\n        break;\n      case 'no_data':\n        processedItem.color = 'gray';\n        break;\n      case 'nodata': // ngalert\n        processedItem.color = 'gray';\n        break;\n    }\n\n    return processedItem;\n  });\n\n  return processed;\n}\n\nexport function dedupAnnotations(annotations: any) {\n  let dedup = [];\n\n  // Split events by annotationId property existence\n  const events = partition(annotations, 'id');\n\n  const eventsById = groupBy(events[0], 'id');\n  dedup = map(eventsById, (eventGroup) => {\n    if (eventGroup.length > 1 && !every(eventGroup, isPanelAlert)) {\n      // Get first non-panel alert\n      return find(eventGroup, (event) => {\n        return event.eventType !== 'panel-alert';\n      });\n    } else {\n      return head(eventGroup);\n    }\n  });\n\n  dedup = concat(dedup, events[1]);\n  return dedup;\n}\n\nfunction isPanelAlert(event: { eventType: string }) {\n  return event.eventType === 'panel-alert';\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAuBgB,SAAA,sBAAA,CAAuB,YAA6B,OAA+C,EAAA;AAGjH,EAAA,IAAI,WAAW,YAAc,EAAA;AAC3B,IAAA,UAAA,GAAa,UAAU,UAAU,CAAA,CAAA;AACjC,IAAA,OAAO,UAAW,CAAA,YAAA,CAAA;AAAA,GACpB;AAGA,EAAA,MAAM,SAAY,GAAA,OAAA,CAAQ,GAAI,CAAA,CAAC,IAAS,KAAA;AAhC1C,IAAA,IAAA,EAAA,CAAA;AAiCI,IAAA,MAAM,gBAAgB,cAAK,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA;AAE3B,IAAA,aAAA,CAAc,MAAS,GAAA,UAAA,CAAA;AACvB,IAAA,aAAA,CAAc,QAAQ,MAAO,CAAA,MAAA,CAAO,aAAc,CAAA,cAAA,CAAe,WAAW,SAAS,CAAA,CAAA;AACrF,IAAA,aAAA,CAAc,OAAO,UAAW,CAAA,IAAA,CAAA;AAChC,IAAA,aAAA,CAAc,WAAW,OAAQ,CAAA,aAAA,CAAc,WAAW,aAAc,CAAA,IAAA,KAAS,cAAc,OAAO,CAAA,CAAA;AAEtG,IAAQ,QAAA,CAAA,EAAA,GAAA,aAAA,CAAc,aAAd,IAAwB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AAAA,MACzB,KAAA,SAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,QAAA,CAAA;AACtB,QAAA,MAAA;AAAA,MACG,KAAA,UAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,KAAA,CAAA;AACtB,QAAA,MAAA;AAAA,MACG,KAAA,IAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,OAAA,CAAA;AACtB,QAAA,MAAA;AAAA,MACG,KAAA,QAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,OAAA,CAAA;AACtB,QAAA,MAAA;AAAA,MACG,KAAA,SAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,MAAA,CAAA;AACtB,QAAA,MAAA;AAAA,MACG,KAAA,QAAA;AACH,QAAA,aAAA,CAAc,KAAQ,GAAA,MAAA,CAAA;AACtB,QAAA,MAAA;AAAA,KAAA;AAGJ,IAAO,OAAA,aAAA,CAAA;AAAA,GACR,CAAA,CAAA;AAED,EAAO,OAAA,SAAA,CAAA;AACT,CAAA;AAEO,SAAS,iBAAiB,WAAkB,EAAA;AACjD,EAAA,IAAI,QAAQ,EAAC,CAAA;AAGb,EAAM,MAAA,MAAA,GAAS,SAAU,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;AAE1C,EAAA,MAAM,UAAa,GAAA,OAAA,CAAQ,MAAO,CAAA,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA;AAC1C,EAAQ,KAAA,GAAA,GAAA,CAAI,UAAY,EAAA,CAAC,UAAe,KAAA;AACtC,IAAA,IAAI,WAAW,MAAS,GAAA,CAAA,IAAK,CAAC,KAAM,CAAA,UAAA,EAAY,YAAY,CAAG,EAAA;AAE7D,MAAO,OAAA,IAAA,CAAK,UAAY,EAAA,CAAC,KAAU,KAAA;AACjC,QAAA,OAAO,MAAM,SAAc,KAAA,aAAA,CAAA;AAAA,OAC5B,CAAA,CAAA;AAAA,KACI,MAAA;AACL,MAAA,OAAO,KAAK,UAAU,CAAA,CAAA;AAAA,KACxB;AAAA,GACD,CAAA,CAAA;AAED,EAAQ,KAAA,GAAA,MAAA,CAAO,KAAO,EAAA,MAAA,CAAO,CAAE,CAAA,CAAA,CAAA;AAC/B,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAEA,SAAS,aAAa,KAA8B,EAAA;AAClD,EAAA,OAAO,MAAM,SAAc,KAAA,aAAA,CAAA;AAC7B;;;;"}