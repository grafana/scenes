{"version":3,"file":"standardAnnotationsSupport.js","sources":["../../../../../src/querying/layers/annotations/standardAnnotationsSupport.ts"],"sourcesContent":["import { isString } from 'lodash';\nimport { Observable, of, OperatorFunction } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport {\n  AnnotationEvent,\n  AnnotationEventFieldSource,\n  AnnotationEventMappings,\n  AnnotationQuery,\n  AnnotationSupport,\n  DataFrame,\n  DataSourceApi,\n  DataTransformContext,\n  Field,\n  FieldType,\n  getFieldDisplayName,\n  KeyValue,\n  standardTransformers,\n} from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nexport const standardAnnotationSupport: AnnotationSupport = {\n  /**\n   * Assume the stored value is standard model.\n   */\n  prepareAnnotation: (json: any) => {\n    if (isString(json?.query)) {\n      const { query, ...rest } = json;\n      return {\n        ...rest,\n        target: {\n          refId: 'annotation_query',\n          query,\n        },\n        mappings: {},\n      };\n    }\n    return json as AnnotationQuery;\n  },\n\n  /**\n   * Default will just return target from the annotation.\n   */\n  prepareQuery: (anno: AnnotationQuery) => anno.target,\n\n  /**\n   * Provides default processing from dataFrame to annotation events.\n   */\n  processEvents: (anno: AnnotationQuery, data: DataFrame[]) => {\n    return getAnnotationsFromData(data, anno.mappings);\n  },\n};\n\n/**\n * Flatten all frames into a single frame with mergeTransformer.\n */\n\nexport function singleFrameFromPanelData(): OperatorFunction<DataFrame[], DataFrame | undefined> {\n  return (source) =>\n    source.pipe(\n      mergeMap((data) => {\n        if (!data?.length) {\n          return of(undefined);\n        }\n\n        if (data.length === 1) {\n          return of(data[0]);\n        }\n\n        const ctx: DataTransformContext = {\n          interpolate: (v: string) => v,\n        };\n\n        return of(data).pipe(\n          standardTransformers.mergeTransformer.operator({}, ctx),\n          map((d) => d[0])\n        );\n      })\n    );\n}\n\ninterface AnnotationEventFieldSetter {\n  key: keyof AnnotationEvent;\n  field?: Field;\n  text?: string;\n  regex?: RegExp;\n  split?: string; // for tags\n}\n\nexport interface AnnotationFieldInfo {\n  key: keyof AnnotationEvent;\n\n  split?: string;\n  field?: (frame: DataFrame) => Field | undefined;\n  placeholder?: string;\n  help?: string;\n}\n\n// These fields get added to the standard UI\nexport const annotationEventNames: AnnotationFieldInfo[] = [\n  {\n    key: 'time',\n    field: (frame: DataFrame) => frame.fields.find((f) => f.type === FieldType.time),\n    placeholder: 'time, or the first time field',\n  },\n  { key: 'timeEnd', help: 'When this field is defined, the annotation will be treated as a range' },\n  {\n    key: 'title',\n  },\n  {\n    key: 'text',\n    field: (frame: DataFrame) => frame.fields.find((f) => f.type === FieldType.string),\n    placeholder: 'text, or the first text field',\n  },\n  { key: 'tags', split: ',', help: 'The results will be split on comma (,)' },\n  {\n    key: 'id',\n  },\n];\n\nexport const publicDashboardEventNames: AnnotationFieldInfo[] = [\n  {\n    key: 'color',\n  },\n  {\n    key: 'isRegion',\n  },\n  {\n    key: 'source',\n  },\n];\n\n// Given legacy infrastructure, alert events are passed though the same annotation\n// pipeline, but include fields that should not be exposed generally\nconst alertEventAndAnnotationFields: AnnotationFieldInfo[] = [\n  ...(config.publicDashboardAccessToken ? publicDashboardEventNames : []),\n  ...annotationEventNames,\n  { key: 'userId' },\n  { key: 'login' },\n  { key: 'email' },\n  { key: 'prevState' },\n  { key: 'newState' },\n  { key: 'data' as any },\n  { key: 'panelId' },\n  { key: 'alertId' },\n  { key: 'dashboardId' },\n  { key: 'dashboardUID' },\n];\n\nexport function getAnnotationsFromData(\n  data: DataFrame[],\n  options?: AnnotationEventMappings\n): Observable<AnnotationEvent[]> {\n  return of(data).pipe(\n    singleFrameFromPanelData(),\n    map((frame) => {\n      if (!frame?.length) {\n        return [];\n      }\n\n      let hasTime = false;\n      let hasText = false;\n      const byName: KeyValue<Field> = {};\n\n      for (const f of frame.fields) {\n        const name = getFieldDisplayName(f, frame);\n        byName[name.toLowerCase()] = f;\n      }\n\n      if (!options) {\n        options = {};\n      }\n\n      const fields: AnnotationEventFieldSetter[] = [];\n\n      for (const evts of alertEventAndAnnotationFields) {\n        const opt = options[evts.key] || {}; //AnnotationEventFieldMapping\n\n        if (opt.source === AnnotationEventFieldSource.Skip) {\n          continue;\n        }\n\n        const setter: AnnotationEventFieldSetter = { key: evts.key, split: evts.split };\n\n        if (opt.source === AnnotationEventFieldSource.Text) {\n          setter.text = opt.value;\n        } else {\n          const lower = (opt.value || evts.key).toLowerCase();\n          setter.field = byName[lower];\n\n          if (!setter.field && evts.field) {\n            setter.field = evts.field(frame);\n          }\n        }\n\n        if (setter.field || setter.text) {\n          fields.push(setter);\n          if (setter.key === 'time') {\n            hasTime = true;\n          } else if (setter.key === 'text') {\n            hasText = true;\n          }\n        }\n      }\n\n      if (!hasTime || !hasText) {\n        console.error('Cannot process annotation fields. No time or text present.');\n        return [];\n      }\n\n      // Add each value to the string\n      const events: AnnotationEvent[] = [];\n\n      for (let i = 0; i < frame.length; i++) {\n        const anno: AnnotationEvent = {\n          type: 'default',\n          color: 'red',\n        };\n\n        for (const f of fields) {\n          let v: any = undefined;\n\n          if (f.text) {\n            v = f.text; // TODO support templates!\n          } else if (f.field) {\n            v = f.field.values.get(i);\n            if (v !== undefined && f.regex) {\n              const match = f.regex.exec(v);\n              if (match) {\n                v = match[1] ? match[1] : match[0];\n              }\n            }\n          }\n\n          if (v !== null && v !== undefined) {\n            if (f.split && typeof v === 'string') {\n              v = v.split(',');\n            }\n            (anno as any)[f.key] = v;\n          }\n        }\n\n        events.push(anno);\n      }\n      return events;\n    })\n  );\n}\n\n// These opt outs are here only for quicker and easier migration to react based annotations editors and because\n// annotation support API needs some work to support less \"standard\" editors like prometheus and here it is not\n// polluting public API.\n\nconst legacyRunner = [\n  'prometheus',\n  'loki',\n  'elasticsearch',\n  'grafana-opensearch-datasource', // external\n];\n\n/**\n * Use legacy runner. Used only as an escape hatch for easier transition to React based annotation editor.\n */\nexport function shouldUseLegacyRunner(datasource: DataSourceApi): boolean {\n  const { type } = datasource;\n  return !datasource.annotations || legacyRunner.includes(type);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,MAAM,yBAA+C,GAAA;AAAA,EAI1D,iBAAA,EAAmB,CAAC,IAAc,KAAA;AAChC,IAAI,IAAA,QAAA,CAAS,IAAM,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,KAAK,CAAG,EAAA;AACzB,MAAA,MAA2B,WAAnB,EA3Bd,KAAA,EAAA,GA2BiC,EAAT,EAAA,IAAA,GAAA,SAAA,CAAS,IAAT,CAAV,OAAA,CAAA,CAAA,CAAA;AACR,MAAA,OAAO,iCACF,IADE,CAAA,EAAA;AAAA,QAEL,MAAQ,EAAA;AAAA,UACN,KAAO,EAAA,kBAAA;AAAA,UACP,KAAA;AAAA,SACF;AAAA,QACA,UAAU,EAAC;AAAA,OACb,CAAA,CAAA;AAAA,KACF;AACA,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAKA,YAAA,EAAc,CAAC,IAAA,KAA0B,IAAK,CAAA,MAAA;AAAA,EAK9C,aAAA,EAAe,CAAC,IAAA,EAAuB,IAAsB,KAAA;AAC3D,IAAO,OAAA,sBAAA,CAAuB,IAAM,EAAA,IAAA,CAAK,QAAQ,CAAA,CAAA;AAAA,GACnD;AACF,EAAA;AAMO,SAAS,wBAAiF,GAAA;AAC/F,EAAO,OAAA,CAAC,WACN,MAAO,CAAA,IAAA;AAAA,IACL,QAAA,CAAS,CAAC,IAAS,KAAA;AACjB,MAAI,IAAA,EAAC,6BAAM,MAAQ,CAAA,EAAA;AACjB,QAAA,OAAO,GAAG,KAAS,CAAA,CAAA,CAAA;AAAA,OACrB;AAEA,MAAI,IAAA,IAAA,CAAK,WAAW,CAAG,EAAA;AACrB,QAAO,OAAA,EAAA,CAAG,KAAK,CAAE,CAAA,CAAA,CAAA;AAAA,OACnB;AAEA,MAAA,MAAM,GAA4B,GAAA;AAAA,QAChC,WAAA,EAAa,CAAC,CAAc,KAAA,CAAA;AAAA,OAC9B,CAAA;AAEA,MAAO,OAAA,EAAA,CAAG,IAAI,CAAE,CAAA,IAAA;AAAA,QACd,oBAAqB,CAAA,gBAAA,CAAiB,QAAS,CAAA,IAAI,GAAG,CAAA;AAAA,QACtD,GAAI,CAAA,CAAC,CAAM,KAAA,CAAA,CAAE,CAAE,CAAA,CAAA;AAAA,OACjB,CAAA;AAAA,KACD,CAAA;AAAA,GACH,CAAA;AACJ,CAAA;AAoBO,MAAM,oBAA8C,GAAA;AAAA,EACzD;AAAA,IACE,GAAK,EAAA,MAAA;AAAA,IACL,KAAA,EAAO,CAAC,KAAA,KAAqB,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,CAAC,CAAM,KAAA,CAAA,CAAE,IAAS,KAAA,SAAA,CAAU,IAAI,CAAA;AAAA,IAC/E,WAAa,EAAA,+BAAA;AAAA,GACf;AAAA,EACA,EAAE,GAAA,EAAK,SAAW,EAAA,IAAA,EAAM,uEAAwE,EAAA;AAAA,EAChG;AAAA,IACE,GAAK,EAAA,OAAA;AAAA,GACP;AAAA,EACA;AAAA,IACE,GAAK,EAAA,MAAA;AAAA,IACL,KAAA,EAAO,CAAC,KAAA,KAAqB,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,CAAC,CAAM,KAAA,CAAA,CAAE,IAAS,KAAA,SAAA,CAAU,MAAM,CAAA;AAAA,IACjF,WAAa,EAAA,+BAAA;AAAA,GACf;AAAA,EACA,EAAE,GAAK,EAAA,MAAA,EAAQ,KAAO,EAAA,GAAA,EAAK,MAAM,wCAAyC,EAAA;AAAA,EAC1E;AAAA,IACE,GAAK,EAAA,IAAA;AAAA,GACP;AACF,EAAA;AAEO,MAAM,yBAAmD,GAAA;AAAA,EAC9D;AAAA,IACE,GAAK,EAAA,OAAA;AAAA,GACP;AAAA,EACA;AAAA,IACE,GAAK,EAAA,UAAA;AAAA,GACP;AAAA,EACA;AAAA,IACE,GAAK,EAAA,QAAA;AAAA,GACP;AACF,EAAA;AAIA,MAAM,6BAAuD,GAAA;AAAA,EAC3D,GAAI,MAAA,CAAO,0BAA6B,GAAA,yBAAA,GAA4B,EAAC;AAAA,EACrE,GAAG,oBAAA;AAAA,EACH,EAAE,KAAK,QAAS,EAAA;AAAA,EAChB,EAAE,KAAK,OAAQ,EAAA;AAAA,EACf,EAAE,KAAK,OAAQ,EAAA;AAAA,EACf,EAAE,KAAK,WAAY,EAAA;AAAA,EACnB,EAAE,KAAK,UAAW,EAAA;AAAA,EAClB,EAAE,KAAK,MAAc,EAAA;AAAA,EACrB,EAAE,KAAK,SAAU,EAAA;AAAA,EACjB,EAAE,KAAK,SAAU,EAAA;AAAA,EACjB,EAAE,KAAK,aAAc,EAAA;AAAA,EACrB,EAAE,KAAK,cAAe,EAAA;AACxB,CAAA,CAAA;AAEgB,SAAA,sBAAA,CACd,MACA,OAC+B,EAAA;AAC/B,EAAO,OAAA,EAAA,CAAG,IAAI,CAAE,CAAA,IAAA;AAAA,IACd,wBAAyB,EAAA;AAAA,IACzB,GAAA,CAAI,CAAC,KAAU,KAAA;AACb,MAAI,IAAA,EAAC,+BAAO,MAAQ,CAAA,EAAA;AAClB,QAAA,OAAO,EAAC,CAAA;AAAA,OACV;AAEA,MAAA,IAAI,OAAU,GAAA,KAAA,CAAA;AACd,MAAA,IAAI,OAAU,GAAA,KAAA,CAAA;AACd,MAAA,MAAM,SAA0B,EAAC,CAAA;AAEjC,MAAW,KAAA,MAAA,CAAA,IAAK,MAAM,MAAQ,EAAA;AAC5B,QAAM,MAAA,IAAA,GAAO,mBAAoB,CAAA,CAAA,EAAG,KAAK,CAAA,CAAA;AACzC,QAAO,MAAA,CAAA,IAAA,CAAK,aAAiB,CAAA,GAAA,CAAA,CAAA;AAAA,OAC/B;AAEA,MAAA,IAAI,CAAC,OAAS,EAAA;AACZ,QAAA,OAAA,GAAU,EAAC,CAAA;AAAA,OACb;AAEA,MAAA,MAAM,SAAuC,EAAC,CAAA;AAE9C,MAAA,KAAA,MAAW,QAAQ,6BAA+B,EAAA;AAChD,QAAA,MAAM,GAAM,GAAA,OAAA,CAAQ,IAAK,CAAA,GAAA,CAAA,IAAQ,EAAC,CAAA;AAElC,QAAI,IAAA,GAAA,CAAI,MAAW,KAAA,0BAAA,CAA2B,IAAM,EAAA;AAClD,UAAA,SAAA;AAAA,SACF;AAEA,QAAA,MAAM,SAAqC,EAAE,GAAA,EAAK,KAAK,GAAK,EAAA,KAAA,EAAO,KAAK,KAAM,EAAA,CAAA;AAE9E,QAAI,IAAA,GAAA,CAAI,MAAW,KAAA,0BAAA,CAA2B,IAAM,EAAA;AAClD,UAAA,MAAA,CAAO,OAAO,GAAI,CAAA,KAAA,CAAA;AAAA,SACb,MAAA;AACL,UAAA,MAAM,KAAS,GAAA,CAAA,GAAA,CAAI,KAAS,IAAA,IAAA,CAAK,KAAK,WAAY,EAAA,CAAA;AAClD,UAAA,MAAA,CAAO,QAAQ,MAAO,CAAA,KAAA,CAAA,CAAA;AAEtB,UAAA,IAAI,CAAC,MAAA,CAAO,KAAS,IAAA,IAAA,CAAK,KAAO,EAAA;AAC/B,YAAO,MAAA,CAAA,KAAA,GAAQ,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AAAA,WACjC;AAAA,SACF;AAEA,QAAI,IAAA,MAAA,CAAO,KAAS,IAAA,MAAA,CAAO,IAAM,EAAA;AAC/B,UAAA,MAAA,CAAO,KAAK,MAAM,CAAA,CAAA;AAClB,UAAI,IAAA,MAAA,CAAO,QAAQ,MAAQ,EAAA;AACzB,YAAU,OAAA,GAAA,IAAA,CAAA;AAAA,WACZ,MAAA,IAAW,MAAO,CAAA,GAAA,KAAQ,MAAQ,EAAA;AAChC,YAAU,OAAA,GAAA,IAAA,CAAA;AAAA,WACZ;AAAA,SACF;AAAA,OACF;AAEA,MAAI,IAAA,CAAC,OAAW,IAAA,CAAC,OAAS,EAAA;AACxB,QAAA,OAAA,CAAQ,MAAM,4DAA4D,CAAA,CAAA;AAC1E,QAAA,OAAO,EAAC,CAAA;AAAA,OACV;AAGA,MAAA,MAAM,SAA4B,EAAC,CAAA;AAEnC,MAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,QAAQ,CAAK,EAAA,EAAA;AACrC,QAAA,MAAM,IAAwB,GAAA;AAAA,UAC5B,IAAM,EAAA,SAAA;AAAA,UACN,KAAO,EAAA,KAAA;AAAA,SACT,CAAA;AAEA,QAAA,KAAA,MAAW,KAAK,MAAQ,EAAA;AACtB,UAAA,IAAI,CAAS,GAAA,KAAA,CAAA,CAAA;AAEb,UAAA,IAAI,EAAE,IAAM,EAAA;AACV,YAAA,CAAA,GAAI,CAAE,CAAA,IAAA,CAAA;AAAA,WACR,MAAA,IAAW,EAAE,KAAO,EAAA;AAClB,YAAA,CAAA,GAAI,CAAE,CAAA,KAAA,CAAM,MAAO,CAAA,GAAA,CAAI,CAAC,CAAA,CAAA;AACxB,YAAI,IAAA,CAAA,KAAM,KAAa,CAAA,IAAA,CAAA,CAAE,KAAO,EAAA;AAC9B,cAAA,MAAM,KAAQ,GAAA,CAAA,CAAE,KAAM,CAAA,IAAA,CAAK,CAAC,CAAA,CAAA;AAC5B,cAAA,IAAI,KAAO,EAAA;AACT,gBAAA,CAAA,GAAI,KAAM,CAAA,CAAA,CAAA,GAAK,KAAM,CAAA,CAAA,CAAA,GAAK,KAAM,CAAA,CAAA,CAAA,CAAA;AAAA,eAClC;AAAA,aACF;AAAA,WACF;AAEA,UAAI,IAAA,CAAA,KAAM,IAAQ,IAAA,CAAA,KAAM,KAAW,CAAA,EAAA;AACjC,YAAA,IAAI,CAAE,CAAA,KAAA,IAAS,OAAO,CAAA,KAAM,QAAU,EAAA;AACpC,cAAI,CAAA,GAAA,CAAA,CAAE,MAAM,GAAG,CAAA,CAAA;AAAA,aACjB;AACA,YAAC,IAAA,CAAa,EAAE,GAAO,CAAA,GAAA,CAAA,CAAA;AAAA,WACzB;AAAA,SACF;AAEA,QAAA,MAAA,CAAO,KAAK,IAAI,CAAA,CAAA;AAAA,OAClB;AACA,MAAO,OAAA,MAAA,CAAA;AAAA,KACR,CAAA;AAAA,GACH,CAAA;AACF,CAAA;AAMA,MAAM,YAAe,GAAA;AAAA,EACnB,YAAA;AAAA,EACA,MAAA;AAAA,EACA,eAAA;AAAA,EACA,+BAAA;AACF,CAAA,CAAA;AAKO,SAAS,sBAAsB,UAAoC,EAAA;AACxE,EAAM,MAAA,EAAE,MAAS,GAAA,UAAA,CAAA;AACjB,EAAA,OAAO,CAAC,UAAA,CAAW,WAAe,IAAA,YAAA,CAAa,SAAS,IAAI,CAAA,CAAA;AAC9D;;;;"}