{"version":3,"file":"PanelOptionsBuilders.js","sources":["../../../../src/core/PanelBuilders/PanelOptionsBuilders.ts"],"sourcesContent":["import {\n  Options as BarChartOptions,\n  defaultOptions as defaultBarChartOptions,\n} from '@grafana/schema/dist/esm/raw/composable/barchart/panelcfg/x/BarChartPanelCfg_types.gen';\nimport {\n  Options as BarGaugeOptions,\n  defaultOptions as defaultBarGaugeOptions,\n} from '@grafana/schema/dist/esm/raw/composable/bargauge/panelcfg/x/BarGaugePanelCfg_types.gen';\nimport {\n  Options as DataGridOptions,\n  defaultOptions as defaultDataGridOptions,\n} from '@grafana/schema/dist/esm/raw/composable/datagrid/panelcfg/x/DatagridPanelCfg_types.gen';\nimport {\n  Options as GaugeOptions,\n  defaultOptions as defaultGaugeOptions,\n} from '@grafana/schema/dist/esm/raw/composable/gauge/panelcfg/x/GaugePanelCfg_types.gen';\nimport {\n  Options as GeomapOptions,\n  defaultOptions as defaultGeomapOptions,\n} from '@grafana/schema/dist/esm/raw/composable/geomap/panelcfg/x/GeomapPanelCfg_types.gen';\nimport {\n  Options as HeatmapOptions,\n  defaultOptions as defaultHeatmapOptions,\n} from '@grafana/schema/dist/esm/raw/composable/heatmap/panelcfg/x/HeatmapPanelCfg_types.gen';\nimport {\n  Options as HistogramOptions,\n  defaultOptions as defaultHistogramOptions,\n} from '@grafana/schema/dist/esm/raw/composable/histogram/panelcfg/x/HistogramPanelCfg_types.gen';\nimport { Options as LogsOptions } from '@grafana/schema/dist/esm/raw/composable/logs/panelcfg/x/LogsPanelCfg_types.gen';\nimport {\n  Options as NewsOptions,\n  defaultOptions as defaultNewsOptions,\n} from '@grafana/schema/dist/esm/raw/composable/news/panelcfg/x/NewsPanelCfg_types.gen';\nimport { Options as NodeGraphOptions } from '@grafana/schema/dist/esm/raw/composable/nodegraph/panelcfg/x/NodeGraphPanelCfg_types.gen';\nimport {\n  Options as PieChartOptions,\n  defaultOptions as defaultPieChartOptions,\n} from '@grafana/schema/dist/esm/raw/composable/piechart/panelcfg/x/PieChartPanelCfg_types.gen';\nimport {\n  Options as StatOptions,\n  defaultOptions as defaultStatOptions,\n} from '@grafana/schema/dist/esm/raw/composable/stat/panelcfg/x/StatPanelCfg_types.gen';\nimport {\n  Options as StateTimelineOptions,\n  defaultOptions as defaultStateTimelineOptions,\n} from '@grafana/schema/dist/esm/raw/composable/statetimeline/panelcfg/x/StateTimelinePanelCfg_types.gen';\nimport {\n  Options as StatusHistoryOptions,\n  defaultOptions as defaultStatusHistoryOptions,\n} from '@grafana/schema/dist/esm/raw/composable/statushistory/panelcfg/x/StatusHistoryPanelCfg_types.gen';\nimport {\n  Options as TableOptions,\n  defaultOptions as defaultTableOptions,\n} from '@grafana/schema/dist/esm/raw/composable/table/panelcfg/x/TablePanelCfg_types.gen';\nimport {\n  Options as TextOptions,\n  defaultOptions as defaultTextOptions,\n} from '@grafana/schema/dist/esm/raw/composable/text/panelcfg/x/TextPanelCfg_types.gen';\nimport { Options as TimeSeriesOptions } from '@grafana/schema/dist/esm/raw/composable/timeseries/panelcfg/x/TimeSeriesPanelCfg_types.gen';\nimport { Options as TrendOptions } from '@grafana/schema/dist/esm/raw/composable/trend/panelcfg/x/TrendPanelCfg_types.gen';\nimport {\n  Options as XYChartOptions,\n  defaultOptions as defaultXYChartOptions,\n} from '@grafana/schema/dist/esm/raw/composable/xychart/panelcfg/x/XYChartPanelCfg_types.gen';\n\nimport { PanelOptionsBuilder } from './PanelOptionsBuilder';\n\nexport const PanelOptionsBuilders = {\n  barchart() {\n    return new PanelOptionsBuilder<BarChartOptions>(() => defaultBarChartOptions);\n  },\n  bargauge() {\n    return new PanelOptionsBuilder<BarGaugeOptions>(() => defaultBarGaugeOptions);\n  },\n  datagrid() {\n    return new PanelOptionsBuilder<DataGridOptions>(() => defaultDataGridOptions);\n  },\n  flamegraph() {\n    return new PanelOptionsBuilder<{}>();\n  },\n  gauge() {\n    return new PanelOptionsBuilder<GaugeOptions>(() => defaultGaugeOptions);\n  },\n  geomap() {\n    return new PanelOptionsBuilder<GeomapOptions>(() => defaultGeomapOptions);\n  },\n  heatmap() {\n    return new PanelOptionsBuilder<HeatmapOptions>(() => defaultHeatmapOptions);\n  },\n  histogram() {\n    return new PanelOptionsBuilder<HistogramOptions>(() => defaultHistogramOptions);\n  },\n  logs() {\n    return new PanelOptionsBuilder<LogsOptions>();\n  },\n  news() {\n    return new PanelOptionsBuilder<NewsOptions>(() => defaultNewsOptions);\n  },\n  nodegraph() {\n    return new PanelOptionsBuilder<NodeGraphOptions>();\n  },\n  piechart() {\n    return new PanelOptionsBuilder<PieChartOptions>(() => defaultPieChartOptions);\n  },\n  stat() {\n    return new PanelOptionsBuilder<StatOptions>(() => defaultStatOptions);\n  },\n  statetimeline() {\n    return new PanelOptionsBuilder<StateTimelineOptions>(() => defaultStateTimelineOptions);\n  },\n  statushistory() {\n    return new PanelOptionsBuilder<StatusHistoryOptions>(() => defaultStatusHistoryOptions);\n  },\n  table() {\n    return new PanelOptionsBuilder<TableOptions>(() => defaultTableOptions);\n  },\n  text() {\n    return new PanelOptionsBuilder<TextOptions>(() => defaultTextOptions);\n  },\n  timeseries() {\n    return new PanelOptionsBuilder<TimeSeriesOptions>();\n  },\n  trend() {\n    return new PanelOptionsBuilder<{}>();\n  },\n  traces() {\n    return new PanelOptionsBuilder<TrendOptions>();\n  },\n  xychart() {\n    return new PanelOptionsBuilder<XYChartOptions>(() => defaultXYChartOptions);\n  },\n};\n"],"names":["defaultBarChartOptions","defaultBarGaugeOptions","defaultDataGridOptions","defaultGaugeOptions","defaultGeomapOptions","defaultHeatmapOptions","defaultHistogramOptions","defaultNewsOptions","defaultPieChartOptions","defaultStatOptions","defaultStateTimelineOptions","defaultStatusHistoryOptions","defaultTableOptions","defaultTextOptions","defaultXYChartOptions"],"mappings":";;;;;;;;;;;;;;;;;AAmEO,MAAM,oBAAuB,GAAA;AAAA,EAClC,QAAW,GAAA;AACT,IAAO,OAAA,IAAI,mBAAqC,CAAA,MAAMA,cAAsB,CAAA,CAAA;AAAA,GAC9E;AAAA,EACA,QAAW,GAAA;AACT,IAAO,OAAA,IAAI,mBAAqC,CAAA,MAAMC,gBAAsB,CAAA,CAAA;AAAA,GAC9E;AAAA,EACA,QAAW,GAAA;AACT,IAAO,OAAA,IAAI,mBAAqC,CAAA,MAAMC,gBAAsB,CAAA,CAAA;AAAA,GAC9E;AAAA,EACA,UAAa,GAAA;AACX,IAAA,OAAO,IAAI,mBAAwB,EAAA,CAAA;AAAA,GACrC;AAAA,EACA,KAAQ,GAAA;AACN,IAAO,OAAA,IAAI,mBAAkC,CAAA,MAAMC,gBAAmB,CAAA,CAAA;AAAA,GACxE;AAAA,EACA,MAAS,GAAA;AACP,IAAO,OAAA,IAAI,mBAAmC,CAAA,MAAMC,gBAAoB,CAAA,CAAA;AAAA,GAC1E;AAAA,EACA,OAAU,GAAA;AACR,IAAO,OAAA,IAAI,mBAAoC,CAAA,MAAMC,gBAAqB,CAAA,CAAA;AAAA,GAC5E;AAAA,EACA,SAAY,GAAA;AACV,IAAO,OAAA,IAAI,mBAAsC,CAAA,MAAMC,gBAAuB,CAAA,CAAA;AAAA,GAChF;AAAA,EACA,IAAO,GAAA;AACL,IAAA,OAAO,IAAI,mBAAiC,EAAA,CAAA;AAAA,GAC9C;AAAA,EACA,IAAO,GAAA;AACL,IAAO,OAAA,IAAI,mBAAiC,CAAA,MAAMC,gBAAkB,CAAA,CAAA;AAAA,GACtE;AAAA,EACA,SAAY,GAAA;AACV,IAAA,OAAO,IAAI,mBAAsC,EAAA,CAAA;AAAA,GACnD;AAAA,EACA,QAAW,GAAA;AACT,IAAO,OAAA,IAAI,mBAAqC,CAAA,MAAMC,gBAAsB,CAAA,CAAA;AAAA,GAC9E;AAAA,EACA,IAAO,GAAA;AACL,IAAO,OAAA,IAAI,mBAAiC,CAAA,MAAMC,gBAAkB,CAAA,CAAA;AAAA,GACtE;AAAA,EACA,aAAgB,GAAA;AACd,IAAO,OAAA,IAAI,mBAA0C,CAAA,MAAMC,gBAA2B,CAAA,CAAA;AAAA,GACxF;AAAA,EACA,aAAgB,GAAA;AACd,IAAO,OAAA,IAAI,mBAA0C,CAAA,MAAMC,gBAA2B,CAAA,CAAA;AAAA,GACxF;AAAA,EACA,KAAQ,GAAA;AACN,IAAO,OAAA,IAAI,mBAAkC,CAAA,MAAMC,gBAAmB,CAAA,CAAA;AAAA,GACxE;AAAA,EACA,IAAO,GAAA;AACL,IAAO,OAAA,IAAI,mBAAiC,CAAA,MAAMC,gBAAkB,CAAA,CAAA;AAAA,GACtE;AAAA,EACA,UAAa,GAAA;AACX,IAAA,OAAO,IAAI,mBAAuC,EAAA,CAAA;AAAA,GACpD;AAAA,EACA,KAAQ,GAAA;AACN,IAAA,OAAO,IAAI,mBAAwB,EAAA,CAAA;AAAA,GACrC;AAAA,EACA,MAAS,GAAA;AACP,IAAA,OAAO,IAAI,mBAAkC,EAAA,CAAA;AAAA,GAC/C;AAAA,EACA,OAAU,GAAA;AACR,IAAO,OAAA,IAAI,mBAAoC,CAAA,MAAMC,gBAAqB,CAAA,CAAA;AAAA,GAC5E;AACF;;;;"}