{"version":3,"file":"FieldConfigBuilders.js","sources":["../../../../src/core/PanelBuilders/FieldConfigBuilders.ts"],"sourcesContent":["import { TableFieldOptions as TableFieldConfig } from '@grafana/schema';\n\nimport {\n  FieldConfig as BarChartFieldConfig,\n  defaultFieldConfig as defaultBarChartFieldConfig,\n} from '@grafana/schema/dist/esm/raw/composable/barchart/panelcfg/x/BarChartPanelCfg_types.gen';\nimport { FieldConfig as HeatmapFieldConfig } from '@grafana/schema/dist/esm/raw/composable/heatmap/panelcfg/x/HeatmapPanelCfg_types.gen';\nimport {\n  FieldConfig as HistogramFieldConfig,\n  defaultFieldConfig as defaultHistogramFieldConfig,\n} from '@grafana/schema/dist/esm/raw/composable/histogram/panelcfg/x/HistogramPanelCfg_types.gen';\nimport { FieldConfig as PieChartFieldConfig } from '@grafana/schema/dist/esm/raw/composable/piechart/panelcfg/x/PieChartPanelCfg_types.gen';\nimport {\n  FieldConfig as StateTimelineFieldConfig,\n  defaultFieldConfig as defaultStateTimelineFieldConfig,\n} from '@grafana/schema/dist/esm/raw/composable/statetimeline/panelcfg/x/StateTimelinePanelCfg_types.gen';\nimport {\n  FieldConfig as StatusHistoryFieldConfig,\n  defaultFieldConfig as defaultStatusHistoryFieldConfig,\n} from '@grafana/schema/dist/esm/raw/composable/statushistory/panelcfg/x/StatusHistoryPanelCfg_types.gen';\nimport { FieldConfig as TimeSeriesFieldConfig } from '@grafana/schema/dist/esm/raw/composable/timeseries/panelcfg/x/TimeSeriesPanelCfg_types.gen';\nimport { FieldConfig as TrendFieldConfig } from '@grafana/schema/dist/esm/raw/composable/trend/panelcfg/x/TrendPanelCfg_types.gen';\nimport { defaultFieldConfig as defaultXYChartFieldConfig } from '@grafana/schema/dist/esm/raw/composable/xychart/panelcfg/x/XYChartPanelCfg_types.gen';\nimport { FieldConfigBuilder } from './FieldConfigBuilder';\n\nexport const FieldConfigBuilders = {\n  barchart() {\n    return new FieldConfigBuilder<BarChartFieldConfig>(() => defaultBarChartFieldConfig);\n  },\n  bargauge() {\n    return new FieldConfigBuilder<{}>();\n  },\n  datagrid() {\n    return new FieldConfigBuilder<{}>();\n  },\n  flamegraph() {\n    return new FieldConfigBuilder<{}>();\n  },\n  gauge() {\n    return new FieldConfigBuilder<{}>();\n  },\n  geomap() {\n    return new FieldConfigBuilder<{}>();\n  },\n  heatmap() {\n    return new FieldConfigBuilder<HeatmapFieldConfig>();\n  },\n  histogram() {\n    return new FieldConfigBuilder<HistogramFieldConfig>(() => defaultHistogramFieldConfig);\n  },\n  logs() {\n    return new FieldConfigBuilder<{}>();\n  },\n  news() {\n    return new FieldConfigBuilder<{}>();\n  },\n  nodegraph() {\n    return new FieldConfigBuilder<{}>();\n  },\n  piechart() {\n    return new FieldConfigBuilder<PieChartFieldConfig>();\n  },\n  stat() {\n    return new FieldConfigBuilder<{}>();\n  },\n  statetimeline() {\n    return new FieldConfigBuilder<StateTimelineFieldConfig>(() => defaultStateTimelineFieldConfig);\n  },\n  statushistory() {\n    return new FieldConfigBuilder<StatusHistoryFieldConfig>(() => defaultStatusHistoryFieldConfig);\n  },\n  table() {\n    return new FieldConfigBuilder<TableFieldConfig>();\n  },\n  text() {\n    return new FieldConfigBuilder<{}>();\n  },\n  timeseries() {\n    return new FieldConfigBuilder<TimeSeriesFieldConfig>();\n  },\n  trend() {\n    return new FieldConfigBuilder<{}>();\n  },\n  traces() {\n    return new FieldConfigBuilder<TrendFieldConfig>();\n  },\n  xychart() {\n    return new FieldConfigBuilder<{}>(() => defaultXYChartFieldConfig);\n  },\n};\n"],"names":["defaultBarChartFieldConfig","defaultHistogramFieldConfig","defaultStateTimelineFieldConfig","defaultStatusHistoryFieldConfig","defaultXYChartFieldConfig"],"mappings":";;;;;;;AAyBO,MAAM,mBAAsB,GAAA;AAAA,EACjC,QAAW,GAAA;AACT,IAAO,OAAA,IAAI,kBAAwC,CAAA,MAAMA,kBAA0B,CAAA,CAAA;AAAA,GACrF;AAAA,EACA,QAAW,GAAA;AACT,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,QAAW,GAAA;AACT,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,UAAa,GAAA;AACX,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,KAAQ,GAAA;AACN,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,MAAS,GAAA;AACP,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,OAAU,GAAA;AACR,IAAA,OAAO,IAAI,kBAAuC,EAAA,CAAA;AAAA,GACpD;AAAA,EACA,SAAY,GAAA;AACV,IAAO,OAAA,IAAI,kBAAyC,CAAA,MAAMC,oBAA2B,CAAA,CAAA;AAAA,GACvF;AAAA,EACA,IAAO,GAAA;AACL,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,IAAO,GAAA;AACL,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,SAAY,GAAA;AACV,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,QAAW,GAAA;AACT,IAAA,OAAO,IAAI,kBAAwC,EAAA,CAAA;AAAA,GACrD;AAAA,EACA,IAAO,GAAA;AACL,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,aAAgB,GAAA;AACd,IAAO,OAAA,IAAI,kBAA6C,CAAA,MAAMC,oBAA+B,CAAA,CAAA;AAAA,GAC/F;AAAA,EACA,aAAgB,GAAA;AACd,IAAO,OAAA,IAAI,kBAA6C,CAAA,MAAMC,oBAA+B,CAAA,CAAA;AAAA,GAC/F;AAAA,EACA,KAAQ,GAAA;AACN,IAAA,OAAO,IAAI,kBAAqC,EAAA,CAAA;AAAA,GAClD;AAAA,EACA,IAAO,GAAA;AACL,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,UAAa,GAAA;AACX,IAAA,OAAO,IAAI,kBAA0C,EAAA,CAAA;AAAA,GACvD;AAAA,EACA,KAAQ,GAAA;AACN,IAAA,OAAO,IAAI,kBAAuB,EAAA,CAAA;AAAA,GACpC;AAAA,EACA,MAAS,GAAA;AACP,IAAA,OAAO,IAAI,kBAAqC,EAAA,CAAA;AAAA,GAClD;AAAA,EACA,OAAU,GAAA;AACR,IAAO,OAAA,IAAI,kBAAuB,CAAA,MAAMC,oBAAyB,CAAA,CAAA;AAAA,GACnE;AACF;;;;"}