{"version":3,"file":"VizConfigBuilder.js","sources":["../../../../src/core/PanelBuilders/VizConfigBuilder.ts"],"sourcesContent":["import { DeepPartial } from '../types';\nimport { FieldConfigBuilder } from './FieldConfigBuilder';\nimport { FieldConfigOverridesBuilder } from './FieldConfigOverridesBuilder';\nimport { PanelOptionsBuilder } from './PanelOptionsBuilder';\nimport { StandardFieldConfig, StandardFieldConfigInterface, VizConfig } from './types';\n\nexport class VizConfigBuilder<TOptions extends {}, TFieldConfig extends {}>\n  implements StandardFieldConfigInterface<StandardFieldConfig, VizConfigBuilder<TOptions, TFieldConfig>, 'set'>\n{\n  private _fieldConfigBuilder: FieldConfigBuilder<TFieldConfig>;\n  private _panelOptionsBuilder: PanelOptionsBuilder<TOptions>;\n  private _pluginId: string;\n  private _pluginVersion: string;\n\n  public constructor(\n    pluginId: string,\n    pluginVersion: string,\n    defaultOptions?: () => Partial<TOptions>,\n    defaultFieldConfig?: () => TFieldConfig\n  ) {\n    this._pluginId = pluginId;\n    this._pluginVersion = pluginVersion;\n    this._fieldConfigBuilder = new FieldConfigBuilder(defaultFieldConfig);\n    this._panelOptionsBuilder = new PanelOptionsBuilder(defaultOptions);\n  }\n\n  /**\n   * Set color.\n   */\n  public setColor(color: StandardFieldConfig['color']): this {\n    this._fieldConfigBuilder.setColor(color);\n    return this;\n  }\n\n  /**\n   * Set number of decimals to show.\n   */\n  public setDecimals(decimals: StandardFieldConfig['decimals']): this {\n    this._fieldConfigBuilder.setDecimals(decimals);\n    return this;\n  }\n\n  /**\n   * Set field display name.\n   */\n  public setDisplayName(displayName: StandardFieldConfig['displayName']): this {\n    this._fieldConfigBuilder.setDisplayName(displayName);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property filterable.\n   */\n  public setFilterable(filterable: StandardFieldConfig['filterable']): this {\n    this._fieldConfigBuilder.setFilterable(filterable);\n    return this;\n  }\n\n  /**\n   * Set data links.\n   */\n  public setLinks(links: StandardFieldConfig['links']): this {\n    this._fieldConfigBuilder.setLinks(links);\n    return this;\n  }\n\n  /**\n   * Set value mappings.\n   */\n  public setMappings(mappings: StandardFieldConfig['mappings']): this {\n    this._fieldConfigBuilder.setMappings(mappings);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property max.\n   */\n  public setMax(max: StandardFieldConfig['max']): this {\n    this._fieldConfigBuilder.setMax(max);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property min.\n   */\n  public setMin(min: StandardFieldConfig['min']): this {\n    this._fieldConfigBuilder.setMin(min);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property noValue.\n   */\n  public setNoValue(noValue: StandardFieldConfig['noValue']): this {\n    this._fieldConfigBuilder.setNoValue(noValue);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property thresholds.\n   */\n  public setThresholds(thresholds: StandardFieldConfig['thresholds']): this {\n    this._fieldConfigBuilder.setThresholds(thresholds);\n    return this;\n  }\n\n  /**\n   * Set the standard field config property unit.\n   */\n  public setUnit(unit: StandardFieldConfig['unit']): this {\n    this._fieldConfigBuilder.setUnit(unit);\n    return this;\n  }\n\n  public setCustomFieldConfig<T extends TFieldConfig, K extends keyof T>(id: K, value: DeepPartial<T[K]>): this {\n    this._fieldConfigBuilder.setCustomFieldConfig(id, value);\n    return this;\n  }\n\n  public setOverrides(builder: (b: FieldConfigOverridesBuilder<TFieldConfig>) => void): this {\n    this._fieldConfigBuilder.setOverrides(builder);\n    return this;\n  }\n\n  /**\n   * Set an individual panel option. This will merge the value with the existing options.\n   */\n  public setOption<T extends TOptions, K extends keyof T>(id: K, value: DeepPartial<T[K]>): this {\n    this._panelOptionsBuilder.setOption(id, value);\n    return this;\n  }\n\n  /**\n   * Build the panel.\n   */\n  public build(): VizConfig<TOptions, TFieldConfig> {\n    return {\n      pluginId: this._pluginId,\n      pluginVersion: this._pluginVersion,\n      options: this._panelOptionsBuilder.build(),\n      fieldConfig: this._fieldConfigBuilder.build(),\n    };\n  }\n}\n"],"names":[],"mappings":"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"}