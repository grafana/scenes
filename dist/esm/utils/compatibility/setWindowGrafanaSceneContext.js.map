{"version":3,"file":"setWindowGrafanaSceneContext.js","sources":["../../../../src/utils/compatibility/setWindowGrafanaSceneContext.ts"],"sourcesContent":["import { SceneObject } from '../../core/types';\nimport { writeSceneLog } from '../writeSceneLog';\n\n/**\n * Adds the scene object to the global window state so that templateSrv in core can interpolate strings using the scene interpolation engine with the scene as scope.\n * This is needed for old datasources that call templateSrv.replace without passing scopedVars. For example in DataSourceAPI.metricFindQuery.\n *\n * This is also used from TimeSrv to access scene time range.\n */\nexport function setWindowGrafanaSceneContext(activeScene: SceneObject) {\n  const prevScene = (window as any).__grafanaSceneContext;\n\n  writeSceneLog('setWindowGrafanaScene', 'set window.__grafanaSceneContext', activeScene);\n  (window as any).__grafanaSceneContext = activeScene;\n\n  return () => {\n    if ((window as any).__grafanaSceneContext === activeScene) {\n      writeSceneLog('setWindowGrafanaScene', 'restore window.__grafanaSceneContext', prevScene);\n      (window as any).__grafanaSceneContext = prevScene;\n    }\n  };\n}\n"],"names":[],"mappings":";;AASO,SAAS,6BAA6B,WAA0B,EAAA;AACrE,EAAA,MAAM,YAAa,MAAe,CAAA,qBAAA,CAAA;AAElC,EAAc,aAAA,CAAA,uBAAA,EAAyB,oCAAoC,WAAW,CAAA,CAAA;AACtF,EAAC,OAAe,qBAAwB,GAAA,WAAA,CAAA;AAExC,EAAA,OAAO,MAAM;AACX,IAAK,IAAA,MAAA,CAAe,0BAA0B,WAAa,EAAA;AACzD,MAAc,aAAA,CAAA,uBAAA,EAAyB,wCAAwC,SAAS,CAAA,CAAA;AACxF,MAAC,OAAe,qBAAwB,GAAA,SAAA,CAAA;AAAA,KAC1C;AAAA,GACF,CAAA;AACF;;;;"}