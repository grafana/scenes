{"version":3,"file":"LoadingIndicator.js","sources":["../../../src/utils/LoadingIndicator.tsx"],"sourcesContent":["import { Icon, Tooltip } from '@grafana/ui';\nimport React, { useCallback } from 'react';\nimport { LoadingIndicatorProps as SelectLoadingIndicatorProps } from 'react-select';\n\nexport const SelectLoadingIndicator = ({\n  innerProps,\n  ...props\n}: SelectLoadingIndicatorProps & { selectProps: { onCancel: () => void } }) => {\n  const { onCancel } = props.selectProps;\n  const onMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onCancel();\n    },\n    [onCancel]\n  );\n\n  return <LoadingIndicator onCancel={onMouseDown} />;\n};\n\ninterface LoadingIndicatorProps {\n  onCancel: (event: React.MouseEvent) => void;\n}\n\nexport function LoadingIndicator(props: LoadingIndicatorProps) {\n  return (\n    <Tooltip content=\"Cancel query\">\n      <Icon\n        className=\"spin-clockwise\"\n        name=\"sync\"\n        size=\"xs\"\n        role=\"button\"\n        onMouseDown={(e) => {\n          props.onCancel(e);\n        }}\n      />\n    </Tooltip>\n  );\n}\n"],"names":[],"mappings":";;;AAyBO,SAAS,iBAAiB,KAA8B,EAAA;AAC7D,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAA,IAAQ,OAAQ,EAAA,cAAA;AAAA,GAAA,kBACd,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAA,IACC,SAAU,EAAA,gBAAA;AAAA,IACV,IAAK,EAAA,MAAA;AAAA,IACL,IAAK,EAAA,IAAA;AAAA,IACL,IAAK,EAAA,QAAA;AAAA,IACL,WAAA,EAAa,CAAC,CAAM,KAAA;AAClB,MAAA,KAAA,CAAM,SAAS,CAAC,CAAA,CAAA;AAAA,KAClB;AAAA,GACF,CACF,CAAA,CAAA;AAEJ;;;;"}