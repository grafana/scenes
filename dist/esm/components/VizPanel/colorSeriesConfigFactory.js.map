{"version":3,"file":"colorSeriesConfigFactory.js","sources":["../../../../src/components/VizPanel/colorSeriesConfigFactory.ts"],"sourcesContent":["import {\n  ConfigOverrideRule,\n  DynamicConfigValue,\n  FieldColorModeId,\n  FieldConfigSource,\n  FieldMatcherID,\n} from '@grafana/data';\n\nexport const changeSeriesColorConfigFactory = (\n  label: string,\n  color: string,\n  fieldConfig: FieldConfigSource\n): FieldConfigSource => {\n  const { overrides } = fieldConfig;\n  const currentIndex = fieldConfig.overrides.findIndex((override) => {\n    return override.matcher.id === FieldMatcherID.byName && override.matcher.options === label;\n  });\n\n  if (currentIndex < 0) {\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, createOverride(label, color)],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const existing = overridesCopy[currentIndex];\n  const propertyIndex = existing.properties.findIndex((p) => p.id === 'color');\n\n  if (propertyIndex < 0) {\n    overridesCopy[currentIndex] = {\n      ...existing,\n      properties: [...existing.properties, createProperty(color)],\n    };\n\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  const propertiesCopy = Array.from(existing.properties);\n  propertiesCopy[propertyIndex] = createProperty(color);\n\n  overridesCopy[currentIndex] = {\n    ...existing,\n    properties: propertiesCopy,\n  };\n\n  return {\n    ...fieldConfig,\n    overrides: overridesCopy,\n  };\n};\n\nconst createOverride = (label: string, color: string): ConfigOverrideRule => {\n  return {\n    matcher: {\n      id: FieldMatcherID.byName,\n      options: label,\n    },\n    properties: [createProperty(color)],\n  };\n};\n\nconst createProperty = (color: string): DynamicConfigValue => {\n  return {\n    id: 'color',\n    value: {\n      mode: FieldColorModeId.Fixed,\n      fixedColor: color,\n    },\n  };\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAQO,MAAM,8BAAiC,GAAA,CAC5C,KACA,EAAA,KAAA,EACA,WACsB,KAAA;AACtB,EAAM,MAAA,EAAE,WAAc,GAAA,WAAA,CAAA;AACtB,EAAA,MAAM,YAAe,GAAA,WAAA,CAAY,SAAU,CAAA,SAAA,CAAU,CAAC,QAAa,KAAA;AACjE,IAAA,OAAO,SAAS,OAAQ,CAAA,EAAA,KAAO,eAAe,MAAU,IAAA,QAAA,CAAS,QAAQ,OAAY,KAAA,KAAA,CAAA;AAAA,GACtF,CAAA,CAAA;AAED,EAAA,IAAI,eAAe,CAAG,EAAA;AACpB,IAAA,OAAO,iCACF,WADE,CAAA,EAAA;AAAA,MAEL,SAAA,EAAW,CAAC,GAAG,WAAA,CAAY,WAAW,cAAe,CAAA,KAAA,EAAO,KAAK,CAAC,CAAA;AAAA,KACpE,CAAA,CAAA;AAAA,GACF;AAEA,EAAM,MAAA,aAAA,GAAgB,KAAM,CAAA,IAAA,CAAK,SAAS,CAAA,CAAA;AAC1C,EAAA,MAAM,WAAW,aAAc,CAAA,YAAA,CAAA,CAAA;AAC/B,EAAM,MAAA,aAAA,GAAgB,SAAS,UAAW,CAAA,SAAA,CAAU,CAAC,CAAM,KAAA,CAAA,CAAE,OAAO,OAAO,CAAA,CAAA;AAE3E,EAAA,IAAI,gBAAgB,CAAG,EAAA;AACrB,IAAc,aAAA,CAAA,YAAA,CAAA,GAAgB,iCACzB,QADyB,CAAA,EAAA;AAAA,MAE5B,YAAY,CAAC,GAAG,SAAS,UAAY,EAAA,cAAA,CAAe,KAAK,CAAC,CAAA;AAAA,KAC5D,CAAA,CAAA;AAEA,IAAA,OAAO,iCACF,WADE,CAAA,EAAA;AAAA,MAEL,SAAW,EAAA,aAAA;AAAA,KACb,CAAA,CAAA;AAAA,GACF;AAEA,EAAA,MAAM,cAAiB,GAAA,KAAA,CAAM,IAAK,CAAA,QAAA,CAAS,UAAU,CAAA,CAAA;AACrD,EAAe,cAAA,CAAA,aAAA,CAAA,GAAiB,eAAe,KAAK,CAAA,CAAA;AAEpD,EAAc,aAAA,CAAA,YAAA,CAAA,GAAgB,iCACzB,QADyB,CAAA,EAAA;AAAA,IAE5B,UAAY,EAAA,cAAA;AAAA,GACd,CAAA,CAAA;AAEA,EAAA,OAAO,iCACF,WADE,CAAA,EAAA;AAAA,IAEL,SAAW,EAAA,aAAA;AAAA,GACb,CAAA,CAAA;AACF,EAAA;AAEA,MAAM,cAAA,GAAiB,CAAC,KAAA,EAAe,KAAsC,KAAA;AAC3E,EAAO,OAAA;AAAA,IACL,OAAS,EAAA;AAAA,MACP,IAAI,cAAe,CAAA,MAAA;AAAA,MACnB,OAAS,EAAA,KAAA;AAAA,KACX;AAAA,IACA,UAAY,EAAA,CAAC,cAAe,CAAA,KAAK,CAAC,CAAA;AAAA,GACpC,CAAA;AACF,CAAA,CAAA;AAEA,MAAM,cAAA,GAAiB,CAAC,KAAsC,KAAA;AAC5D,EAAO,OAAA;AAAA,IACL,EAAI,EAAA,OAAA;AAAA,IACJ,KAAO,EAAA;AAAA,MACL,MAAM,gBAAiB,CAAA,KAAA;AAAA,MACvB,UAAY,EAAA,KAAA;AAAA,KACd;AAAA,GACF,CAAA;AACF,CAAA;;;;"}