{"version":3,"file":"VizPanelMenu.js","sources":["../../../../src/components/VizPanel/VizPanelMenu.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { PanelMenuItem } from '@grafana/data';\nimport { Menu } from '@grafana/ui';\nimport { SceneObjectBase } from '../../core/SceneObjectBase';\nimport { SceneComponentProps, SceneObjectState } from '../../core/types';\nimport { selectors } from '@grafana/e2e-selectors';\n\ninterface VizPanelMenuState extends SceneObjectState {\n  items?: PanelMenuItem[];\n}\n\nexport class VizPanelMenu extends SceneObjectBase<VizPanelMenuState> {\n  static Component = VizPanelMenuRenderer;\n\n  // Allows adding menu items dynamically\n  public addItem(item: PanelMenuItem) {\n    this.setState({\n      items: this.state.items ? [...this.state.items, item] : [item],\n    });\n  }\n\n  // Allows replacing all menu items\n  public setItems(items: PanelMenuItem[]) {\n    this.setState({\n      items,\n    });\n  }\n}\n\nfunction VizPanelMenuRenderer({ model }: SceneComponentProps<VizPanelMenu>) {\n  const { items = [] } = model.useState();\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  const renderItems = (items: PanelMenuItem[]) => {\n    return items.map((item) => {\n      switch (item.type) {\n        case 'divider':\n          return <Menu.Divider key={item.text} />;\n        case 'group':\n          return (\n            <Menu.Group key={item.text} label={item.text}>\n              {item.subMenu ? renderItems(item.subMenu) : undefined}\n            </Menu.Group>\n          );\n        default:\n          return (\n            <Menu.Item\n              key={item.text}\n              label={item.text}\n              icon={item.iconClassName}\n              childItems={item.subMenu ? renderItems(item.subMenu) : undefined}\n              url={item.href}\n              onClick={item.onClick}\n              shortcut={item.shortcut}\n              testId={selectors.components.Panels.Panel.menuItems(item.text)}\n            />\n          );\n      }\n    });\n  };\n\n  return <Menu ref={ref}>{renderItems(items)}</Menu>;\n}\n"],"names":["items"],"mappings":";;;;;AAWO,MAAM,qBAAqB,eAAmC,CAAA;AAAA,EAI5D,QAAQ,IAAqB,EAAA;AAClC,IAAA,IAAA,CAAK,QAAS,CAAA;AAAA,MACZ,KAAO,EAAA,IAAA,CAAK,KAAM,CAAA,KAAA,GAAQ,CAAC,GAAG,IAAK,CAAA,KAAA,CAAM,KAAO,EAAA,IAAI,CAAI,GAAA,CAAC,IAAI,CAAA;AAAA,KAC9D,CAAA,CAAA;AAAA,GACH;AAAA,EAGO,SAAS,KAAwB,EAAA;AACtC,IAAA,IAAA,CAAK,QAAS,CAAA;AAAA,MACZ,KAAA;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACF,CAAA;AAhBa,YAAA,CACJ,SAAY,GAAA,oBAAA,CAAA;AAiBrB,SAAS,oBAAA,CAAqB,EAAE,KAAA,EAA4C,EAAA;AAC1E,EAAA,MAAM,EAAE,KAAQ,GAAA,EAAG,EAAA,GAAI,MAAM,QAAS,EAAA,CAAA;AACtC,EAAM,MAAA,GAAA,GAAM,KAAM,CAAA,MAAA,CAAuB,IAAI,CAAA,CAAA;AAE7C,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,IAAI,OAAS,EAAA;AACf,MAAA,GAAA,CAAI,QAAQ,KAAM,EAAA,CAAA;AAAA,KACpB;AAAA,GACF,EAAG,EAAE,CAAA,CAAA;AAEL,EAAM,MAAA,WAAA,GAAc,CAACA,MAA2B,KAAA;AAC9C,IAAOA,OAAAA,MAAAA,CAAM,GAAI,CAAA,CAAC,IAAS,KAAA;AACzB,MAAA,QAAQ,IAAK,CAAA,IAAA;AAAA,QACN,KAAA,SAAA;AACH,UAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAK,OAAL,EAAA;AAAA,YAAa,KAAK,IAAK,CAAA,IAAA;AAAA,WAAM,CAAA,CAAA;AAAA,QAClC,KAAA,OAAA;AACH,UACE,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAK,KAAL,EAAA;AAAA,YAAW,KAAK,IAAK,CAAA,IAAA;AAAA,YAAM,OAAO,IAAK,CAAA,IAAA;AAAA,WAAA,EACrC,KAAK,OAAU,GAAA,WAAA,CAAY,IAAK,CAAA,OAAO,IAAI,KAC9C,CAAA,CAAA,CAAA;AAAA,QAAA;AAGF,UACE,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAK,IAAL,EAAA;AAAA,YACC,KAAK,IAAK,CAAA,IAAA;AAAA,YACV,OAAO,IAAK,CAAA,IAAA;AAAA,YACZ,MAAM,IAAK,CAAA,aAAA;AAAA,YACX,YAAY,IAAK,CAAA,OAAA,GAAU,WAAY,CAAA,IAAA,CAAK,OAAO,CAAI,GAAA,KAAA,CAAA;AAAA,YACvD,KAAK,IAAK,CAAA,IAAA;AAAA,YACV,SAAS,IAAK,CAAA,OAAA;AAAA,YACd,UAAU,IAAK,CAAA,QAAA;AAAA,YACf,QAAQ,SAAU,CAAA,UAAA,CAAW,OAAO,KAAM,CAAA,SAAA,CAAU,KAAK,IAAI,CAAA;AAAA,WAC/D,CAAA,CAAA;AAAA,OAAA;AAAA,KAGP,CAAA,CAAA;AAAA,GACH,CAAA;AAEA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAA,IAAK,GAAA;AAAA,GAAW,EAAA,WAAA,CAAY,KAAK,CAAE,CAAA,CAAA;AAC7C;;;;"}