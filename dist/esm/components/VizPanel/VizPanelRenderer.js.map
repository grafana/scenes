{"version":3,"file":"VizPanelRenderer.js","sources":["../../../../src/components/VizPanel/VizPanelRenderer.tsx"],"sourcesContent":["import React, { RefCallback, useCallback, useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n\n// @ts-ignore\nimport { AlertState, GrafanaTheme2, PanelData, PluginContextProvider, SetPanelAttentionEvent, rangeUtil, RawTimeRange, TimeRange } from '@grafana/data';\n\nimport {getAppEvents, getDataSourceSrv} from '@grafana/runtime';\nimport { PanelChrome, ErrorBoundaryAlert, PanelContextProvider, Tooltip, useStyles2, Icon, Button } from '@grafana/ui';\n\nimport { sceneGraph } from '../../core/sceneGraph';\nimport { isSceneObject, SceneComponentProps, SceneLayout, SceneObject } from '../../core/types';\n\nimport { VizPanel } from './VizPanel';\nimport { css, cx } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport {DataQuery, DataSourceRef} from \"@grafana/schema\";\n\nexport function VizPanelRenderer({ model }: SceneComponentProps<VizPanel>) {\n  const {\n    title,\n    options,\n    fieldConfig,\n    _pluginLoadError,\n    displayMode,\n    hoverHeader,\n    hoverHeaderOffset,\n    menu,\n    headerActions,\n    titleItems,\n    description,\n    _renderCounter = 0,\n  } = model.useState();\n  const [ref, { width, height }] = useMeasure();\n  const appEvents = useMemo(() => getAppEvents(), []);\n\n  const setPanelAttention = useCallback(() => {\n    appEvents.publish(new SetPanelAttentionEvent({ panelId: model.state.key }));\n  }, [model.state.key, appEvents]);\n  const debouncedMouseMove = useMemo(\n    () => debounce(setPanelAttention, 100, { leading: true, trailing: false }),\n    [setPanelAttention]\n  );\n\n  const plugin = model.getPlugin();\n\n  const { dragClass, dragClassCancel } = getDragClasses(model);\n  const dataObject = sceneGraph.getData(model);\n\n  const rawData = dataObject.useState();\n  const dataWithFieldConfig = model.applyFieldConfig(rawData.data!);\n  const sceneTimeRange = sceneGraph.getTimeRange(model);\n  const timeZone = sceneTimeRange.getTimeZone();\n  const timeRange = model.getTimeRange(dataWithFieldConfig);\n\n  // Interpolate title\n  const titleInterpolated = model.interpolate(title, undefined, 'text');\n\n  const alertStateStyles = useStyles2(getAlertStateStyles);\n\n  if (!plugin) {\n    return <div>Loading plugin panel...</div>;\n  }\n\n  if (!plugin.panel) {\n    return <div>Panel plugin has no panel component</div>;\n  }\n\n  const PanelComponent = plugin.panel;\n\n  // If we have a query runner on our level inform it of the container width (used to set auto max data points)\n  if (dataObject && dataObject.setContainerWidth) {\n    dataObject.setContainerWidth(Math.round(width));\n  }\n\n  let titleItemsElement: React.ReactNode[] = [];\n\n  if (titleItems) {\n    if (Array.isArray(titleItems)) {\n      titleItemsElement = titleItemsElement.concat(\n        titleItems.map((titleItem) => {\n          return <titleItem.Component model={titleItem} key={`${titleItem.state.key}`} />;\n        })\n      );\n    } else if (isSceneObject(titleItems)) {\n      titleItemsElement.push(<titleItems.Component model={titleItems} />);\n    } else {\n      titleItemsElement.push(titleItems);\n    }\n  }\n\n  // If we have local time range show that in panel header\n  if (model.state.$timeRange) {\n    titleItemsElement.push(<model.state.$timeRange.Component model={model.state.$timeRange} key={model.state.key} />);\n  }\n\n  if (dataWithFieldConfig.alertState) {\n    titleItemsElement.push(\n      <Tooltip content={dataWithFieldConfig.alertState.state ?? 'unknown'} key={`alert-states-icon-${model.state.key}`}>\n        <PanelChrome.TitleItem\n          className={cx({\n            [alertStateStyles.ok]: dataWithFieldConfig.alertState.state === AlertState.OK,\n            [alertStateStyles.pending]: dataWithFieldConfig.alertState.state === AlertState.Pending,\n            [alertStateStyles.alerting]: dataWithFieldConfig.alertState.state === AlertState.Alerting,\n          })}\n        >\n          <Icon\n            name={dataWithFieldConfig.alertState.state === 'alerting' ? 'heart-break' : 'heart'}\n            className=\"panel-alert-icon\"\n            size=\"md\"\n          />\n        </PanelChrome.TitleItem>\n      </Tooltip>\n    );\n  }\n\n  let panelMenu;\n  if (menu) {\n    panelMenu = <menu.Component model={menu} />;\n  }\n\n  let actionsElement: React.ReactNode | undefined;\n\n  if (headerActions) {\n    if (Array.isArray(headerActions)) {\n      actionsElement = (\n        <>\n          {headerActions.map((action) => {\n            return <action.Component model={action} key={`${action.state.key}`} />;\n          })}\n        </>\n      );\n    } else if (isSceneObject(headerActions)) {\n      actionsElement = <headerActions.Component model={headerActions} />;\n    } else {\n      actionsElement = headerActions;\n    }\n  }\n\n  // Data is always returned. For non-data panels, empty PanelData is returned.\n  const data = dataWithFieldConfig!;\n\n  const isReadyToRender = dataObject.isDataReadyToDisplay ? dataObject.isDataReadyToDisplay() : true;\n\n  const context = model.getPanelContext();\n  const panelId = model.getLegacyPanelId();\n\n  let datasource: DataSourceRef | null | undefined = null\n  if (data.request?.targets?.length??0 > 0) {\n    datasource = data.request?.targets[0].datasource\n  }\n\n  return (\n    <div className={relativeWrapper}>\n      <div ref={ref as RefCallback<HTMLDivElement>} className={absoluteWrapper} data-viz-panel-key={model.state.key}>\n        {width > 0 && height > 0 && (\n          <PanelChrome\n            title={titleInterpolated}\n            description={description?.trim() ? model.getDescription : undefined}\n            loadingState={data.state}\n            statusMessage={getChromeStatusMessage(data, _pluginLoadError)}\n            statusMessageOnClick={model.onStatusMessageClick}\n            width={width}\n            height={height}\n            displayMode={displayMode}\n            hoverHeader={hoverHeader}\n            hoverHeaderOffset={hoverHeaderOffset}\n            titleItems={titleItemsElement}\n            dragClass={dragClass}\n            actions={actionsElement}\n            dragClassCancel={dragClassCancel}\n            padding={plugin.noPadding ? 'none' : 'md'}\n            menu={panelMenu}\n            onCancelQuery={model.onCancelQuery}\n            // @ts-ignore\n            onFocus={setPanelAttention}\n            onMouseEnter={setPanelAttention}\n            onMouseMove={debouncedMouseMove}\n          >\n            {(innerWidth, innerHeight) => (\n              <>\n                {plugin.meta.id === 'timeseries' && (\n                    <Button\n                        style={{top: \"-32px\",right: \"28px\", position: \"absolute\", border: 0, padding: 0}}\n                        variant=\"secondary\"\n                        fill=\"outline\"\n                        type=\"button\"\n                        data-testid=\"send-query-button\"\n                        tooltip={\"Oodle insight\"}\n                        tooltipPlacement=\"top\"\n                        hidden={datasource?.type !== 'prometheus'}\n                        onClick={() => {\n                          const variables = { ...data?.request?.scopedVars };\n                          variables.__interval = {\n                            value: '$__interval',\n                          }\n                          variables.__interval_ms = {\n                            value: '$__interval_ms',\n                          }\n\n                          let timeRange = rangeUtil.convertRawToRange(data.request?.rangeRaw as RawTimeRange)\n                          let rangeDurationMs = timeRange.to.valueOf() - timeRange.from.valueOf()\n\n                          getDataSourceSrv().get(datasource, variables)\n                              .then(ds => {\n                                if (ds.interpolateVariablesInQueries) {\n                                  let targets = ds.interpolateVariablesInQueries(data.request?.targets as DataQuery[], variables);\n                                  sendOodleInsightEvent(\n                                      data.request?.dashboardUID as string,\n                                      \"Insights\",\n                                      model.state.title,\n                                      data.request?.panelId as number,\n                                      targets,\n                                      timeRange,\n                                      rangeDurationMs,\n                                      model.state?.fieldConfig?.defaults?.unit,\n                                  );\n                                } else {\n                                  throw new Error('datasource does not support variable interpolation');\n                                }\n                              })\n                              .catch(_ => {\n                                sendOodleInsightEvent(\n                                    data.request?.dashboardUID as string,\n                                    \"Insights\",\n                                    model.state.title,\n                                    data.request?.panelId as number,\n                                    data.request?.targets as DataQuery[],\n                                    timeRange,\n                                    rangeDurationMs,\n                                    model.state?.fieldConfig?.defaults?.unit,\n                                );\n                              });\n                        }}\n                    >\n                      <img\n                          src=\"https://imagedelivery.net/oP5rEbdkySYwiZY4N9HGRw/d0e74e50-902c-4b3c-90af-cabc367bcb00/public\"\n                          alt=\"Insight icon\"\n                          data-testid=\"insight-icon\"\n                          style={{ height: '25px' }}\n                      />\n                    </Button>\n                )}\n                <ErrorBoundaryAlert dependencies={[plugin, data]}>\n                  <PluginContextProvider meta={plugin.meta}>\n                    <PanelContextProvider value={context}>\n                      {isReadyToRender && (\n                        <PanelComponent\n                          id={panelId}\n                          data={data}\n                          title=\"TEST TITLE\"\n                          timeRange={timeRange}\n                          timeZone={timeZone}\n                          options={options}\n                          fieldConfig={fieldConfig}\n                          transparent={false}\n                          width={innerWidth}\n                          height={innerHeight}\n                          renderCounter={_renderCounter}\n                          replaceVariables={model.interpolate}\n                          onOptionsChange={model.onOptionsChange}\n                          onFieldConfigChange={model.onFieldConfigChange}\n                          onChangeTimeRange={model.onTimeRangeChange}\n                          eventBus={context.eventBus}\n                        />\n                      )}\n                    </PanelContextProvider>\n                  </PluginContextProvider>\n                </ErrorBoundaryAlert>\n              </>\n            )}\n          </PanelChrome>\n        )}\n      </div>\n    </div>\n  );\n}\nconst sendOodleInsightEvent = (\n    dashboardUId: string,\n    dashboardTitle: string,\n    panelTitle: string,\n    panelId: number,\n    expressionData: DataQuery[],\n    dashboardTime: TimeRange,\n    rangeDurationMs: number,\n    unit: string | undefined\n) => {\n  const eventData = {\n    dashboardUId: dashboardUId,\n    dashboardTitle: dashboardTitle,\n    panelTitle: panelTitle,\n    panelId: panelId,\n    expressionData: expressionData,\n    dashboardTime: dashboardTime,\n    rangeDurationMs: rangeDurationMs,\n    unit: unit\n  }\n\n  sendEventToParent({\n    type: 'message',\n    payload: {\n      source: 'oodle-grafana',\n      eventType: 'sendQuery',\n      value: JSON.parse(JSON.stringify(eventData)),\n    },\n  });\n}\n\n// Custom type\ninterface SendDataToParentProps {\n  type: string;\n  payload: {\n    eventType: string;\n    source: string;\n    value: any;\n  };\n}\n\n// Custom function\nfunction sendEventToParent(data: SendDataToParentProps) {\n  window.parent.postMessage(data, '*');\n}\n\nfunction getDragClasses(panel: VizPanel) {\n  const parentLayout = sceneGraph.getLayout(panel);\n  const isDraggable = parentLayout?.isDraggable();\n\n  if (!parentLayout || !isDraggable || itemDraggingDisabled(panel, parentLayout)) {\n    return { dragClass: '', dragClassCancel: '' };\n  }\n\n  return { dragClass: parentLayout.getDragClass?.(), dragClassCancel: parentLayout?.getDragClassCancel?.() };\n}\n\n/**\n * Walks up the parent chain until it hits the layout object, trying to find the closest SceneGridItemLike ancestor.\n * It is not always the direct parent, because the VizPanel can be wrapped in other objects.\n */\nfunction itemDraggingDisabled(item: SceneObject, layout: SceneLayout) {\n  let ancestor = item.parent;\n\n  while (ancestor && ancestor !== layout) {\n    if ('isDraggable' in ancestor.state && ancestor.state.isDraggable === false) {\n      return true;\n    }\n\n    ancestor = ancestor.parent;\n  }\n\n  return false;\n}\n\nfunction getChromeStatusMessage(data: PanelData, pluginLoadingError: string | undefined) {\n  if (pluginLoadingError) {\n    return pluginLoadingError;\n  }\n\n  let message = data.error ? data.error.message : undefined;\n\n  // Handling multiple errors with a single string until we integrate VizPanel with inspector\n  if (data.errors) {\n    message = data.errors.map((e) => e.message).join(', ');\n  }\n  return message;\n}\n\nconst relativeWrapper = css({\n  position: 'relative',\n  width: '100%',\n  height: '100%',\n});\n\n/**\n * Sadly this this absolute wrapper is needed for the panel to adopt smaller sizes.\n * The combo of useMeasure and PanelChrome makes the panel take up the width it get's but that makes it impossible to\n * Then adapt to smaller space (say resizing the browser window or undocking menu).\n */\nconst absoluteWrapper = css({\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n});\n\nconst getAlertStateStyles = (theme: GrafanaTheme2) => {\n  return {\n    ok: css({\n      color: theme.colors.success.text,\n    }),\n    pending: css({\n      color: theme.colors.warning.text,\n    }),\n    alerting: css({\n      color: theme.colors.error.text,\n    }),\n  };\n};\n"],"names":["_a","_b","timeRange","_c","_d","_e"],"mappings":"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"}