{"version":3,"file":"guards.js","sources":["../../../../../src/variables/variants/query/guards.ts"],"sourcesContent":["import {\n  DataQuery,\n  DataSourceJsonData,\n  DataSourceApi,\n  MetricFindValue,\n  VariableSupportType,\n  StandardVariableQuery,\n  DataQueryRequest,\n  DataQueryResponse,\n  QueryEditorProps,\n} from '@grafana/data';\nimport { TemplateSrv } from '@grafana/runtime';\nimport { ComponentType } from 'react';\n\nimport { Observable } from 'rxjs';\n\n/**\n * Interfaces and guards below are copied from core.\n * Not exposing via grafana/data as these are not intended to be used in context other than variables.\n */\n\ninterface DataSourceWithLegacyVariableSupport<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> extends DataSourceApi<TQuery, TOptions> {\n  metricFindQuery(query: any, options?: any): Promise<MetricFindValue[]>;\n  variables: undefined;\n}\n\ninterface DataSourceWithStandardVariableSupport<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> extends DataSourceApi<TQuery, TOptions> {\n  variables: {\n    getType(): VariableSupportType;\n    toDataQuery(query: StandardVariableQuery): TQuery;\n    query(request: DataQueryRequest<TQuery>): Observable<DataQueryResponse>;\n  };\n}\n\ninterface DataSourceWithCustomVariableSupport<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> extends DataSourceApi<TQuery, TOptions> {\n  variables: {\n    getType(): VariableSupportType;\n    editor: VariableQueryEditorType;\n    query(request: DataQueryRequest<TQuery>): Observable<DataQueryResponse>;\n  };\n}\n\ninterface VariableQueryEditorProps {\n  query: any;\n  onChange: (query: any, definition: string) => void;\n  datasource: any;\n  templateSrv: TemplateSrv;\n}\n\ntype VariableQueryEditorType<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> = ComponentType<VariableQueryEditorProps> | ComponentType<QueryEditorProps<any, TQuery, TOptions, any>> | null;\n\nexport const hasLegacyVariableSupport = <\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n>(\n  datasource: DataSourceApi<TQuery, TOptions>\n): datasource is DataSourceWithLegacyVariableSupport<TQuery, TOptions> => {\n  return Boolean(datasource.metricFindQuery) && !Boolean(datasource.variables);\n};\n\nexport const hasStandardVariableSupport = <\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n>(\n  datasource: DataSourceApi<TQuery, TOptions>\n): datasource is DataSourceWithStandardVariableSupport<TQuery, TOptions> => {\n  if (!datasource.variables) {\n    return false;\n  }\n\n  if (datasource.variables.getType() !== VariableSupportType.Standard) {\n    return false;\n  }\n\n  const variableSupport = datasource.variables;\n  return 'toDataQuery' in variableSupport && Boolean(variableSupport.toDataQuery);\n};\n\nexport const hasCustomVariableSupport = <\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n>(\n  datasource: DataSourceApi<TQuery, TOptions>\n): datasource is DataSourceWithCustomVariableSupport<TQuery, TOptions> => {\n  if (!datasource.variables) {\n    return false;\n  }\n\n  if (datasource.variables.getType() !== VariableSupportType.Custom) {\n    return false;\n  }\n\n  const variableSupport = datasource.variables;\n  return (\n    'query' in variableSupport &&\n    'editor' in variableSupport &&\n    Boolean(variableSupport.query) &&\n    Boolean(variableSupport.editor)\n  );\n};\n"],"names":[],"mappings":";;AA+Da,MAAA,wBAAA,GAA2B,CAItC,UACwE,KAAA;AACxE,EAAA,OAAO,QAAQ,UAAW,CAAA,eAAe,KAAK,CAAC,OAAA,CAAQ,WAAW,SAAS,CAAA,CAAA;AAC7E,EAAA;AAEa,MAAA,0BAAA,GAA6B,CAIxC,UAC0E,KAAA;AAC1E,EAAI,IAAA,CAAC,WAAW,SAAW,EAAA;AACzB,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,UAAW,CAAA,SAAA,CAAU,OAAQ,EAAA,KAAM,oBAAoB,QAAU,EAAA;AACnE,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAA,MAAM,kBAAkB,UAAW,CAAA,SAAA,CAAA;AACnC,EAAA,OAAO,aAAiB,IAAA,eAAA,IAAmB,OAAQ,CAAA,eAAA,CAAgB,WAAW,CAAA,CAAA;AAChF,EAAA;AAEa,MAAA,wBAAA,GAA2B,CAItC,UACwE,KAAA;AACxE,EAAI,IAAA,CAAC,WAAW,SAAW,EAAA;AACzB,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,UAAW,CAAA,SAAA,CAAU,OAAQ,EAAA,KAAM,oBAAoB,MAAQ,EAAA;AACjE,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAA,MAAM,kBAAkB,UAAW,CAAA,SAAA,CAAA;AACnC,EACE,OAAA,OAAA,IAAW,eACX,IAAA,QAAA,IAAY,eACZ,IAAA,OAAA,CAAQ,gBAAgB,KAAK,CAAA,IAC7B,OAAQ,CAAA,eAAA,CAAgB,MAAM,CAAA,CAAA;AAElC;;;;"}