{"version":3,"file":"types.js","sources":["../../../src/variables/types.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nimport { BusEventWithPayload } from '@grafana/data';\nimport { VariableType, VariableHide } from '@grafana/schema';\n\nimport { SceneObject, SceneObjectState } from '../core/types';\n\nexport interface SceneVariableState extends SceneObjectState {\n  type: VariableType;\n  name: string;\n  label?: string;\n  hide?: VariableHide;\n  skipUrlSync?: boolean;\n  loading?: boolean;\n  error?: any | null;\n  description?: string | null;\n}\n\nexport interface SceneVariable<TState extends SceneVariableState = SceneVariableState> extends SceneObject<TState> {\n  /**\n   * This function is called on activation or when a dependency changes.\n   */\n  validateAndUpdate?(): Observable<ValidateAndUpdateResult>;\n\n  /**\n   * Should return the value for the given field path\n   */\n  getValue(fieldPath?: string): VariableValue | undefined | null;\n\n  /**\n   * Should return the value display text, used by the \"text\" formatter\n   * Example: ${podId:text}\n   * Useful for variables that have non user friendly values but friendly display text names.\n   */\n  getValueText?(fieldPath?: string): string;\n\n  /**\n   * For special edge case senarios. For example local function that locally scoped variables can implement.\n   **/\n  isAncestorLoading?(): boolean;\n\n  /**\n   * Allows cancelling variable execution.\n   */\n  onCancel?(): void;\n\n  /**\n   * @experimental\n   * Indicates that a variable loads values lazily when user interacts with the variable dropdown.\n   */\n  isLazy?: boolean;\n}\n\nexport type VariableValue = VariableValueSingle | VariableValueSingle[];\n\nexport type VariableValueSingle = string | boolean | number | CustomVariableValue;\n\n/**\n * This is for edge case values like the custom \"allValue\" that should not be escaped/formatted like other values\n * The custom all value usually contain wildcards that should not be escaped.\n */\nexport interface CustomVariableValue {\n  /**\n   * The format name or function used in the expression\n   */\n  formatter(formatNameOrFn?: string | VariableCustomFormatterFn): string;\n}\n\nexport interface ValidateAndUpdateResult {}\nexport interface VariableValueOption {\n  label: string;\n  value: VariableValueSingle;\n  group?: string;\n}\n\nexport interface SceneVariableSetState extends SceneObjectState {\n  variables: SceneVariable[];\n}\n\nexport interface SceneVariables extends SceneObject<SceneVariableSetState> {\n  /**\n   * Will look for and return variable matching name\n   */\n  getByName(name: string): SceneVariable | undefined;\n  /**\n   * Will return true if the variable is loading or waiting for an update to complete.\n   */\n  isVariableLoadingOrWaitingToUpdate(variable: SceneVariable): boolean;\n}\n\nexport class SceneVariableValueChangedEvent extends BusEventWithPayload<SceneVariable> {\n  public static type = 'scene-variable-changed-value';\n}\n\nexport interface SceneVariableDependencyConfigLike {\n  /** Return all variable names this object depend on */\n  getNames(): Set<string>;\n\n  /** Used to check for dependency on a specific variable */\n  hasDependencyOn(name: string): boolean;\n\n  /**\n   * Will be called when the VariableSet have completed an update process or when a variable has changed value.\n   **/\n  variableUpdateCompleted(variable: SceneVariable, hasChanged: boolean): void;\n}\n\n/**\n * Used in CustomFormatterFn\n */\nexport interface CustomFormatterVariable {\n  name: string;\n  type: VariableType;\n  multi?: boolean;\n  includeAll?: boolean;\n}\n\nexport type VariableCustomFormatterFn = (\n  value: unknown,\n  legacyVariableModel: Partial<CustomFormatterVariable>,\n  legacyDefaultFormatter?: VariableCustomFormatterFn\n) => string;\n\nexport type InterpolationFormatParameter = string | VariableCustomFormatterFn | undefined;\n\nexport function isCustomVariableValue(value: VariableValue): value is CustomVariableValue {\n  return typeof value === 'object' && 'formatter' in value;\n}\n"],"names":[],"mappings":";;AA0FO,MAAM,uCAAuC,mBAAmC,CAAA;AAEvF,CAAA;AAFa,8BAAA,CACG,IAAO,GAAA,8BAAA,CAAA;AAkChB,SAAS,sBAAsB,KAAoD,EAAA;AACxF,EAAO,OAAA,OAAO,KAAU,KAAA,QAAA,IAAY,WAAe,IAAA,KAAA,CAAA;AACrD;;;;"}