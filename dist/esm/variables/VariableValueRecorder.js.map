{"version":3,"file":"VariableValueRecorder.js","sources":["../../../src/variables/VariableValueRecorder.ts"],"sourcesContent":["import { sceneGraph } from '../core/sceneGraph';\nimport { SceneObject } from '../core/types';\nimport { SceneVariable, VariableValue } from './types';\nimport { isVariableValueEqual } from './utils';\n\n/**\n * Useful for remembering variable values to know if they have changed\n **/\nexport class VariableValueRecorder {\n  private _values = new Map<string, VariableValue | undefined | null>();\n\n  public recordCurrentDependencyValuesForSceneObject(sceneObject: SceneObject) {\n    this.clearValues();\n\n    if (!sceneObject.variableDependency) {\n      return;\n    }\n\n    for (const variableName of sceneObject.variableDependency.getNames()) {\n      const variable = sceneGraph.lookupVariable(variableName, sceneObject);\n      if (variable) {\n        this._values.set(variable.state.name, variable.getValue());\n      }\n    }\n  }\n\n  public cloneAndRecordCurrentValuesForSceneObject(sceneObject: SceneObject) {\n    const clone = new VariableValueRecorder();\n    clone.recordCurrentDependencyValuesForSceneObject(sceneObject);\n    return clone;\n  }\n\n  public clearValues() {\n    this._values.clear();\n  }\n\n  public hasValues(): boolean {\n    return !!this._values;\n  }\n\n  public recordCurrentValue(variable: SceneVariable) {\n    this._values.set(variable.state.name, variable.getValue());\n  }\n\n  public hasRecordedValue(variable: SceneVariable): boolean {\n    return this._values.has(variable.state.name);\n  }\n\n  public hasValueChanged(variable: SceneVariable): boolean {\n    if (this._values.has(variable.state.name)) {\n      const value = this._values.get(variable.state.name);\n      if (!isVariableValueEqual(value, variable.getValue())) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public hasDependenciesChanged(sceneObject: SceneObject): boolean {\n    if (!this._values) {\n      return false;\n    }\n\n    if (!sceneObject.variableDependency) {\n      return false;\n    }\n\n    for (const variableName of sceneObject.variableDependency.getNames()) {\n      const variable = sceneGraph.lookupVariable(variableName, sceneObject);\n      if (!variable) {\n        continue;\n      }\n\n      const name = variable.state.name;\n\n      if (variable && this._values.has(name)) {\n        const value = this._values.get(name);\n        if (!isVariableValueEqual(value, variable.getValue())) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}