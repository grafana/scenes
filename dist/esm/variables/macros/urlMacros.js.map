{"version":3,"file":"urlMacros.js","sources":["../../../../src/variables/macros/urlMacros.ts"],"sourcesContent":["import { config, locationService } from '@grafana/runtime';\nimport { SceneObject } from '../../core/types';\nimport { FormatVariable } from '../interpolation/formatRegistry';\nimport { CustomVariableValue } from '../types';\n\nexport class UrlMacro implements FormatVariable {\n  public state: { name: string; type: string };\n\n  public constructor(name: string, _: SceneObject) {\n    this.state = { name: name, type: 'url_macro' };\n  }\n\n  public getValue(fieldPath?: string) {\n    const location = locationService.getLocation();\n    const subUrl = config.appSubUrl ?? '';\n\n    switch (fieldPath ?? '') {\n      case 'params':\n        return new UrlStateFormatter(location.search);\n      case 'path':\n        return subUrl + location.pathname;\n      case '':\n      default:\n        return subUrl + location.pathname + location.search;\n    }\n  }\n\n  public getValueText?(): string {\n    return '';\n  }\n}\n\nclass UrlStateFormatter implements CustomVariableValue {\n  public constructor(private _urlQueryParams: string) {}\n\n  public formatter(options: string): string {\n    if (!options) {\n      return this._urlQueryParams;\n    }\n\n    const params = options.split(':');\n    if (params[0] === 'exclude' && params.length > 1) {\n      const allParams = new URLSearchParams(this._urlQueryParams);\n      for (const param of params[1].split(',')) {\n        allParams.delete(param);\n      }\n\n      return `?${allParams}`;\n    }\n\n    if (params[0] === 'include' && params.length > 1) {\n      const allParams = new URLSearchParams(this._urlQueryParams);\n      const includeOnly = params[1].split(',');\n\n      for (const param of allParams.keys()) {\n        if (!includeOnly.includes(param)) {\n          allParams.delete(param);\n        }\n      }\n\n      return `?${allParams}`;\n    }\n\n    return this._urlQueryParams;\n  }\n}\n"],"names":[],"mappings":";;AAKO,MAAM,QAAmC,CAAA;AAAA,EAGvC,WAAA,CAAY,MAAc,CAAgB,EAAA;AAC/C,IAAA,IAAA,CAAK,KAAQ,GAAA,EAAE,IAAY,EAAA,IAAA,EAAM,WAAY,EAAA,CAAA;AAAA,GAC/C;AAAA,EAEO,SAAS,SAAoB,EAAA;AAZtC,IAAA,IAAA,EAAA,CAAA;AAaI,IAAM,MAAA,QAAA,GAAW,gBAAgB,WAAY,EAAA,CAAA;AAC7C,IAAM,MAAA,MAAA,GAAA,CAAS,EAAO,GAAA,MAAA,CAAA,SAAA,KAAP,IAAoB,GAAA,EAAA,GAAA,EAAA,CAAA;AAEnC,IAAA,QAAQ,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA;AAAA,MACd,KAAA,QAAA;AACH,QAAO,OAAA,IAAI,iBAAkB,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AAAA,MACzC,KAAA,MAAA;AACH,QAAA,OAAO,SAAS,QAAS,CAAA,QAAA,CAAA;AAAA,MACtB,KAAA,EAAA,CAAA;AAAA,MAAA;AAEH,QAAO,OAAA,MAAA,GAAS,QAAS,CAAA,QAAA,GAAW,QAAS,CAAA,MAAA,CAAA;AAAA,KAAA;AAAA,GAEnD;AAAA,EAEO,YAAwB,GAAA;AAC7B,IAAO,OAAA,EAAA,CAAA;AAAA,GACT;AACF,CAAA;AAEA,MAAM,iBAAiD,CAAA;AAAA,EAC9C,YAAoB,eAAyB,EAAA;AAAzB,IAAA,IAAA,CAAA,eAAA,GAAA,eAAA,CAAA;AAAA,GAA0B;AAAA,EAE9C,UAAU,OAAyB,EAAA;AACxC,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAA,OAAO,IAAK,CAAA,eAAA,CAAA;AAAA,KACd;AAEA,IAAM,MAAA,MAAA,GAAS,OAAQ,CAAA,KAAA,CAAM,GAAG,CAAA,CAAA;AAChC,IAAA,IAAI,MAAO,CAAA,CAAA,CAAA,KAAO,SAAa,IAAA,MAAA,CAAO,SAAS,CAAG,EAAA;AAChD,MAAA,MAAM,SAAY,GAAA,IAAI,eAAgB,CAAA,IAAA,CAAK,eAAe,CAAA,CAAA;AAC1D,MAAA,KAAA,MAAW,KAAS,IAAA,MAAA,CAAO,CAAG,CAAA,CAAA,KAAA,CAAM,GAAG,CAAG,EAAA;AACxC,QAAA,SAAA,CAAU,OAAO,KAAK,CAAA,CAAA;AAAA,OACxB;AAEA,MAAA,OAAO,CAAI,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AAAA,KACb;AAEA,IAAA,IAAI,MAAO,CAAA,CAAA,CAAA,KAAO,SAAa,IAAA,MAAA,CAAO,SAAS,CAAG,EAAA;AAChD,MAAA,MAAM,SAAY,GAAA,IAAI,eAAgB,CAAA,IAAA,CAAK,eAAe,CAAA,CAAA;AAC1D,MAAA,MAAM,WAAc,GAAA,MAAA,CAAO,CAAG,CAAA,CAAA,KAAA,CAAM,GAAG,CAAA,CAAA;AAEvC,MAAW,KAAA,MAAA,KAAA,IAAS,SAAU,CAAA,IAAA,EAAQ,EAAA;AACpC,QAAA,IAAI,CAAC,WAAA,CAAY,QAAS,CAAA,KAAK,CAAG,EAAA;AAChC,UAAA,SAAA,CAAU,OAAO,KAAK,CAAA,CAAA;AAAA,SACxB;AAAA,OACF;AAEA,MAAA,OAAO,CAAI,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AAAA,KACb;AAEA,IAAA,OAAO,IAAK,CAAA,eAAA,CAAA;AAAA,GACd;AACF;;;;"}