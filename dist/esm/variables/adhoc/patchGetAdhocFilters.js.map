{"version":3,"file":"patchGetAdhocFilters.js","sources":["../../../../src/variables/adhoc/patchGetAdhocFilters.ts"],"sourcesContent":["import { getDataSourceSrv, getTemplateSrv } from '@grafana/runtime';\nimport { AdHocVariableFilter } from '@grafana/data';\nimport { AdHocFiltersVariable } from './AdHocFiltersVariable';\n\nlet originalGetAdhocFilters: any = undefined;\nlet allActiveFilterSets = new Set<AdHocFiltersVariable>();\n\nexport function patchGetAdhocFilters(filterVar: AdHocFiltersVariable) {\n  filterVar.addActivationHandler(() => {\n    allActiveFilterSets.add(filterVar);\n    return () => allActiveFilterSets.delete(filterVar);\n  });\n\n  if (originalGetAdhocFilters) {\n    return;\n  }\n\n  const templateSrv: any = getTemplateSrv();\n  if (!templateSrv?.getAdhocFilters) {\n    console.log('Failed to patch getAdhocFilters');\n    return;\n  }\n\n  originalGetAdhocFilters = templateSrv.getAdhocFilters;\n\n  templateSrv.getAdhocFilters = function getAdhocFiltersScenePatch(dsName: string): AdHocVariableFilter[] {\n    if (allActiveFilterSets.size === 0) {\n      return originalGetAdhocFilters.call(templateSrv);\n    }\n\n    const ds = getDataSourceSrv().getInstanceSettings(dsName);\n    if (!ds) {\n      return [];\n    }\n\n    for (const filter of allActiveFilterSets.values()) {\n      if (filter.state.datasource?.uid === ds.uid) {\n        return filter.state.filters;\n      }\n    }\n\n    return [];\n  }.bind(templateSrv);\n}\n\nexport function findActiveAdHocFilterVariableByUid(dsUid: string | undefined): AdHocFiltersVariable | undefined {\n  for (const filter of allActiveFilterSets.values()) {\n    if (filter.state.datasource?.uid === dsUid) {\n      return filter;\n    }\n  }\n\n  return undefined;\n}\n"],"names":[],"mappings":";;AAIA,IAAI,uBAA+B,GAAA,KAAA,CAAA,CAAA;AACnC,IAAI,mBAAA,uBAA0B,GAA0B,EAAA,CAAA;AAEjD,SAAS,qBAAqB,SAAiC,EAAA;AACpE,EAAA,SAAA,CAAU,qBAAqB,MAAM;AACnC,IAAA,mBAAA,CAAoB,IAAI,SAAS,CAAA,CAAA;AACjC,IAAO,OAAA,MAAM,mBAAoB,CAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,GAClD,CAAA,CAAA;AAED,EAAA,IAAI,uBAAyB,EAAA;AAC3B,IAAA,OAAA;AAAA,GACF;AAEA,EAAA,MAAM,cAAmB,cAAe,EAAA,CAAA;AACxC,EAAI,IAAA,EAAC,2CAAa,eAAiB,CAAA,EAAA;AACjC,IAAA,OAAA,CAAQ,IAAI,iCAAiC,CAAA,CAAA;AAC7C,IAAA,OAAA;AAAA,GACF;AAEA,EAAA,uBAAA,GAA0B,WAAY,CAAA,eAAA,CAAA;AAEtC,EAAY,WAAA,CAAA,eAAA,GAAkB,SAAS,yBAAA,CAA0B,MAAuC,EAAA;AAzB1G,IAAA,IAAA,EAAA,CAAA;AA0BI,IAAI,IAAA,mBAAA,CAAoB,SAAS,CAAG,EAAA;AAClC,MAAO,OAAA,uBAAA,CAAwB,KAAK,WAAW,CAAA,CAAA;AAAA,KACjD;AAEA,IAAA,MAAM,EAAK,GAAA,gBAAA,EAAmB,CAAA,mBAAA,CAAoB,MAAM,CAAA,CAAA;AACxD,IAAA,IAAI,CAAC,EAAI,EAAA;AACP,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AAEA,IAAW,KAAA,MAAA,MAAA,IAAU,mBAAoB,CAAA,MAAA,EAAU,EAAA;AACjD,MAAA,IAAA,CAAA,CAAI,YAAO,KAAM,CAAA,UAAA,KAAb,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAQ,GAAG,GAAK,EAAA;AAC3C,QAAA,OAAO,OAAO,KAAM,CAAA,OAAA,CAAA;AAAA,OACtB;AAAA,KACF;AAEA,IAAA,OAAO,EAAC,CAAA;AAAA,GACV,CAAE,KAAK,WAAW,CAAA,CAAA;AACpB,CAAA;AAEO,SAAS,mCAAmC,KAA6D,EAAA;AA7ChH,EAAA,IAAA,EAAA,CAAA;AA8CE,EAAW,KAAA,MAAA,MAAA,IAAU,mBAAoB,CAAA,MAAA,EAAU,EAAA;AACjD,IAAA,IAAA,CAAA,CAAI,EAAO,GAAA,MAAA,CAAA,KAAA,CAAM,UAAb,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAyB,SAAQ,KAAO,EAAA;AAC1C,MAAO,OAAA,MAAA,CAAA;AAAA,KACT;AAAA,GACF;AAEA,EAAO,OAAA,KAAA,CAAA,CAAA;AACT;;;;"}